{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"tslib\"","webpack:///external \"mongoose\"","webpack:///external \"inversify-express-utils\"","webpack:///./src/middleware/authMiddleware.ts","webpack:///./src/interfaces/index.ts","webpack:///external \"inversify\"","webpack:///./src/error/ApiError.ts","webpack:///./src/containerDI/index.ts","webpack:///./src/utils/base.ts","webpack:///./src/interfaces/types.ts","webpack:///external \"jsonwebtoken\"","webpack:///./src/models/User.ts","webpack:///external \"reflect-metadata\"","webpack:///./src/models/Friend.ts","webpack:///./src/models/Room.ts","webpack:///./src/main.ts","webpack:///external \"express\"","webpack:///external \"ip\"","webpack:///./src/modules/HttpServer.ts","webpack:///./src/middleware/errorHandlingMiddleware.ts","webpack:///./src/controllers/fileController.ts","webpack:///./src/middleware/file.ts","webpack:///external \"multer\"","webpack:///external \"multer-gridfs-storage\"","webpack:///./src/modules/gridFS.ts","webpack:///external \"gridfs-stream\"","webpack:///./src/interfaces/modules/index.ts","webpack:///./src/controllers/authController.ts","webpack:///external \"bcryptjs\"","webpack:///./src/controllers/userController.ts","webpack:///./src/utils/friends.ts","webpack:///./src/controllers/repetitionController.ts","webpack:///./src/models/Repetitions.ts","webpack:///./src/controllers/dictionariesController.ts","webpack:///./src/models/Dictionary.ts","webpack:///./src/controllers/friendsController.ts","webpack:///external \"socket.io\"","webpack:///./src/modules/WsServer.ts","webpack:///./src/controllers/roomController.ts","webpack:///./src/controllers/translateController.ts","webpack:///./src/modules/Browser.ts","webpack:///external \"puppeteer\"","webpack:///external \"cors\""],"names":["authMiddleWare","req","_res","next","method","token","headers","authorization","split","ApiError_1","notAuth","decoded","jsonwebtoken_1","verify","process","_user","e","exports","Object","enumerable","get","types_1","ApiError","status","message","Error","myContainer","inversify_1","bind","_unbind","_isBound","_rebind","_unbindAsync","_onActivation","_onDeactivation","interfaces_1","Auth","to","authController_1","inSingletonScope","User","userController_1","Friend","friendsController_1","Dictionary","dictionariesController_1","Repetition","repetitionController_1","Room","roomController_1","Translate","translateController_1","DbClient","toConstantValue","mongoose_1","connection","Browser","Browser_1","Ws","socket_io_1","Fs","gridFS_1","FileController","fileController_1","WsServer","WsServer_1","registerController","constructor","inversify_express_utils_1","Controller","whenTargetNamed","name","parseDictionaryCollection","dictionary","res","values","map","parseDocument","reduce","acc","val","word","model","_id","console","log","deleteDocument","Model","id","response","user","findOneAndRemove","doc","send","responseAllCollection","request","repetition","idUser","query","language","translatedLanguage","find","collection","patchDocument","oldValue","findOneAndUpdate","value","body","getDataDocument","params","findOne","oldWord","toObject","setDocument","key","documentAlreadyExist","document","Types","ObjectId","save","updateUser","updatedField","userModel","getPuppeteerArgs","TYPES","Symbol","Server","App","username","type","String","lowercase","unique","required","match","index","email","isProAccount","Boolean","password","profilePicture","avatar","biography","gender","birthday","Number","hobbies","activityDate","Date","transactions","date","price","currency","exp","friends","ref","timestamps","methods","setPassword","bcryptjs_1","hash","hashedPassword","validPassword","compare","isMatch","generateJWT","sign","expiresIn","jwtid","generateJWRT","refresh","payload","decode","iat","jti","toAuthJSON","oldToken","refreshToken","requester","recipient","enums","admin","moderators","users","messages","msg","author","require","ip_1","address","start","server","HttpServer_1","express_1","containerDI_1","listen","connectToDB","HttpServer","framework","dataBase","containerDI","app","load","setConfig","use","json","urlencoded","extended","setErrorConfig","errorHandlingMiddleware_1","connect","exit","build","ErrorHandleMiddleware","err","_req","_next","fs","file","undefined","imgUrl","filename","setHeader","getFileBuffer","buffer","badRequest","result","remove","tslib_1","authMiddleware_1","file_1","single","storage","multer_gridfs_storage_1","url","options","useNewUrlParser","useUnifiedTopology","bucketName","now","originalname","GridFS","fsBucket","once","mongo","GridFSBucket","db","openDownloadStreamByName","files","stream","read","Promise","resolve","reject","chunks","on","data","push","Buffer","concat","modules_1","FS","AuthController","User_1","internal","comparePassword","candidate","UserController","Friend_1","filter","friend","length","toString","findFriends","UserModel","FriendModel","aggregate","localField","foreignField","RepetitionController","Repetitions_1","translatedTo","themes","otherTranslates","translate","synonyms","partsOfSpeech","progress","repeatDay","countRepeatAtStart","repeatAtStart","allMistakes","DictionariesController","Dictionary_1","FriendsController","candidateFriendId","$set","upsert","docA","docB","$push","updateUserA","updateUserB","$pull","ws","usersOnline","roomID","userID","socket","Room_1","roomMsg","emit","newMsg","updateOne","RoomController","room","rooms","friendId","roomId","updatedRoom","joinToRoom","findOneAndDelete","TranslateController","browser","initBrowser","getWindowData","closePage","page","createBrowser","waitUntil","puppeteerNode","puppeteer_1","getBrowserInstance","newPage","close","puppeteer","rendererOptions","launch","args","evaluate","window","querySelectorAll","el","title","elem","titleDOM","DOMParser","parseFromString","querySelector","childNodes","forEach","node","innerText","textContent","includes","speech","trim","toLowerCase","windowData"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n","module.exports = require(\"tslib\");","module.exports = require(\"mongoose\");","module.exports = require(\"inversify-express-utils\");","import jwt from 'jsonwebtoken'\nimport { ApiError } from '../error/ApiError'\n// import { jwtSecret } from './../../config/default.json'\n\nexport function authMiddleWare(req: any, _res: any, next: any) {\n  if (req.method === \"OPTIONS\") {\n    next()\n  }\n  try {\n    const token = req.headers.authorization.split(' ')[1] // Bearer asfasnfkajsfnjk\n\n    if (!token) {\n      return next(ApiError.notAuth('Token not found'))\n    }\n    const decoded = jwt.verify(token, process.env.jwtSecret || '')\n    req._user = decoded\n    next()\n  } catch (e) {\n    return next(ApiError.notAuth('Token expired'))\n  }\n};\n","import cors from \"cors\";\nimport mongoose from \"mongoose\";\nimport { TYPES } from \"./types\";\n\nexport type Cors = (\n  req: cors.CorsRequest,\n  res: {\n    statusCode?: number | undefined;\n    setHeader(key: string, value: string): any;\n    end(): any;\n  },\n  next: (err?: any) => any\n) => void\n\nexport interface DB<T, O = any, C = any> {\n  connect: (uri: string, options?: O, callback?: C) => Promise<T>\n}\n\nexport interface IServer {\n  connectToDB: () => Promise<void>;\n  listen: () => void;\n  useRouter: () => void;\n}\n\nexport interface IFileController {\n  uploadPhoto: (req: any, res: any, next: any) => void\n  getPhoto: (req: any, res: any, next: any) => void\n  deletePhoto: (req: any, res: any, next: any) => void\n}\n\nexport type DbClient = mongoose.Connection;\n\nexport { TYPES }","module.exports = require(\"inversify\");","export class ApiError extends Error {\n  status: number;\n  private constructor(status: number, message: string) {\n    super();\n    this.status = status\n    this.message = message\n  }\n\n  static badRequest(message: string) {\n    return new ApiError(404, message)\n  }\n\n  static internal(message: string) {\n    return new ApiError(500, message)\n  }\n\n  static forbidden(message: string) {\n    return new ApiError(403, message)\n  }\n\n  static notAuth(message: string) {\n    return new ApiError(401, message)\n  }\n}","import { Container, ContainerModule, interfaces } from \"inversify\";\nimport mongoose, { Types } from \"mongoose\";\n// import { Server } from \"../../server\";\nimport { FileController } from \"../controllers/fileController\";\nimport { GridFS } from \"../modules/gridFS\";\n// import { FS } from \"../controllers/intefaces\";\nimport { Cors, DB, DbClient, IFileController, IServer, TYPES } from \"../interfaces\";\nimport { TYPE } from \"inversify-express-utils\";\nimport { Auth, AuthController, authController } from \"../controllers/authController\";\nimport { UserController } from \"../controllers/userController\";\nimport { RepetitionController } from \"../controllers/repetitionController\";\nimport { DictionariesController } from \"../controllers/dictionariesController\";\nimport { FS } from \"../interfaces/modules\";\nimport { FriendsController } from \"../controllers/friendsController\";\nimport {Server as IOServer} from 'socket.io'\nimport { WsServer } from \"../modules/WsServer\";\nimport { RoomController } from \"../controllers/roomController\";\nimport { TranslateController } from \"../controllers/translateController\";\nimport { Browser } from \"../modules/Browser\";\n\nconst myContainer = new Container();\n\nexport const mainModule = new ContainerModule(\n  (\n    bind: interfaces.Bind,\n    _unbind: interfaces.Unbind,\n    _isBound: interfaces.IsBound,\n    _rebind: interfaces.Rebind,\n    _unbindAsync: interfaces.UnbindAsync,\n    _onActivation: interfaces.Container[\"onActivation\"],\n    _onDeactivation: interfaces.Container[\"onDeactivation\"]\n  ) => {\n\n    // registerController(bind, AuthController)\n\n    bind<Auth>(TYPES.Auth).to(AuthController).inSingletonScope()\n    bind<UserController>(TYPES.User).to(UserController).inSingletonScope()\n    bind<FriendsController>(TYPES.Friend).to(FriendsController).inSingletonScope()\n    bind<DictionariesController>(TYPES.Dictionary).to(DictionariesController).inSingletonScope()\n    bind<RepetitionController>(TYPES.Repetition).to(RepetitionController).inSingletonScope()\n    bind<RoomController>(TYPES.Room).to(RoomController).inSingletonScope()\n    bind<TranslateController>(TYPES.Translate).to(TranslateController).inSingletonScope()\n\n    bind<DbClient>(TYPES.DbClient).toConstantValue(mongoose.connection)\n\n    bind<typeof Browser>(TYPES.Browser).toConstantValue(Browser)\n    bind<typeof IOServer>(TYPES.Ws).toConstantValue(IOServer)\n    bind<FS>(TYPES.Fs).to(GridFS).inSingletonScope()\n    bind<IFileController>(TYPES.FileController).to(FileController).inSingletonScope()\n    // bind<Container>(TYPES.Container).toConstantValue(myContainer)\n    bind<WsServer>(TYPES.WsServer).to(WsServer).inSingletonScope()\n\n  }\n);\n\n\nfunction registerController<T>(\n  bind: interfaces.Bind,\n  constructor: interfaces.Newable<T>\n) {\n  bind<T>(TYPE.Controller)\n    .to(constructor)\n    .whenTargetNamed(constructor.name);\n}\n\nexport { myContainer }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import { Container, Inject, Service } from 'typedi';\n// DI with typedi\n// const container = Container.of();\n\n// const fs = new GridFS(mongoose.connection);\n// // const fileController = new FileController();\n\n// container.set(\"fs\", fs);\n// // container.set(\"fileSystem\", fileSystem);\n\n// const fileController = container.get(FileController);","import mongoose, { Model } from \"mongoose\";\nimport { UserSchema } from \"../models/User\";\n\n\nexport function parseDictionaryCollection(dictionary: any) {\n\n\n  const res = Object.values(dictionary).map(parseDocument)\n\n  // const resToObj = res.reduce(arrayToObject, {})\n  // \n  // await writeFile(`${PATH_DATA}repetitions.json`, JSON.stringify(resToObj, null, 2));\n  return res.reduce((acc, val) => ({ ...acc, [val.word]: val }), {});\n}\n\nexport function parseDocument(model: any) {\n\n  try {\n    return {...model.get('value'), _id: model.get('_id')}\n  } catch (e) {\n    console.log(e)\n  }\n}\n\nexport async function deleteDocument(Model: Model<{}>, id: string, response: any, user: string) {\n  try {\n\n    const doc = await Model.findOneAndRemove({ _id: id, user })\n    return response.send(parseDocument(doc));\n  } catch (err) {\n    return console.log(err);\n  } \n}\n\nexport const responseAllCollection = async (Model: Model<{}>, response: any, request: any, repetition = false) => {\n  const { idUser } = request._user;\n  const {language, translatedLanguage} = request.query\n \n  try {\n    let collection\n    if (repetition) {\n      collection = await Model.find({ user: idUser, 'value.language': [language, translatedLanguage], 'value.translatedTo': [language, translatedLanguage] })\n        // .find({'value.language': translatedLanguage, 'value.translatedTo': language })\n    } else {\n      collection = await Model.find({ user: idUser, 'value.language': language, 'value.translatedTo': translatedLanguage })\n\n    }\n    \n    return response.send(parseDictionaryCollection(collection))\n  } catch (err) {\n    return console.log(err);\n  }\n\n}\n\nexport async function patchDocument(Model: Model<{}>, id: string, oldValue: any, request: any, response: any) {\n  const { idUser } = request._user;\n\n  try {\n    const res = await Model.findOneAndUpdate({ _id: id, user: idUser }, { value: { ...oldValue, ...request.body } }, { new: true });\n   return  response.send(parseDocument(res));\n  } catch(err) {\n    return console.log(err);\n  }\n\n}\n\nexport async function getDataDocument<T>(request: any, Model: Model<T>) {\n  const { id } = request.params;\n  const { idUser } = request._user;\n\n  const oldWord = await Model.findOne({ _id: id, user: idUser })\n  const oldValue = oldWord?.toObject().value || {}\n\n  return { id, oldValue }\n}\n\nexport async function setDocument(Model: Model<{}>, request: any, response: any) {\n  const { idUser } = request._user;\n\n  const documentAlreadyExist = await Model.findOne({ key: request.body.word, user: idUser })\n\n  if (documentAlreadyExist) {\n    return response.status(404).send()\n  }\n\n  const document = new Model({ key: request.body.word, value: request.body, user: new mongoose.Types.ObjectId(idUser) });\n\n \n  try {\n    await document.save()\n    return response.send(parseDocument(document));\n  } catch (error) {\n    return console.log(error);\n  }\n  \n}\n\nexport async function updateUser(request: any, Model: Model<UserSchema>, updatedField: {[key: string]: string}) {\n\n  const { idUser } = request._user;\n  const userModel = await Model.findOne({ _id: idUser })\n \n  \n  return await Model.findOneAndUpdate({ _id: idUser }, { ...userModel?.toObject(), ...updatedField}, { new: true })\n} \n\nexport function getPuppeteerArgs() {\n  return  [\"--no-sandbox\", \"--disable-setuid-sandbox\"]\n}\n","const TYPES = {\n  Fs: Symbol.for(\"Fs\"),\n  FileController: Symbol.for(\"FileController\"), \n  Server: Symbol.for(\"Server\"),\n  App: Symbol.for(\"App\"),\n  Browser: Symbol('Browser'),\n  DbClient: Symbol(\"DbClient\"),\n  Ws: Symbol(\"Ws\"),\n  WsServer: Symbol(\"WsServer\"),\n  Repetition: Symbol('Repetition'),\n  Dictionary: Symbol('Dictionary'),\n  User: Symbol('User'),\n  Friend: Symbol('Friend'),\n  Auth: Symbol('Auth'),\n  Room: Symbol('Room'),\n  Translate: Symbol('Translate'),\n  // Container: Symbol('Container'),\n};\n\nexport { TYPES };","module.exports = require(\"jsonwebtoken\");","\nimport { Schema, model, Types } from 'mongoose'\nimport bcrypt from 'bcryptjs'\nimport jwt, { JwtPayload } from 'jsonwebtoken'\n// import { jwtSecret } from './../../config/default.json'\n\nexport const userSchema = new Schema<UserSchema, {}, IUserMethods>({\n  username: { type: String, lowercase: true, unique: true, required: [true, \"can't be blank\"], match: [/^[a-zA-Z0-9]+$/, 'is invalid'], index: true },\n  email: { type: String, lowercase: true, unique: true, required: [true, \"can't be blank\"], match: [/\\S+@\\S+\\.\\S+/, 'is invalid'], index: true },\n  isProAccount: { type: Boolean, default: false },\n  password: String,\n  profilePicture: String,\n  avatar: String,\n  biography: String,\n  gender: { type: String, enum: [\"male\", \"female\"] },\n  birthday: Number,\n  hobbies: String,\n  activityDate: Date,\n  language: {\n    type: String,\n    required: true\n  },\n  translatedLanguage: {\n    type: String,\n    required: true\n  },\n  transactions: [{\n    date: Number,\n    price: Number,\n    currency: String,\n    exp: Number,\n  }],\n  friends: [{ type: Schema.Types.ObjectId, ref: 'Friends'}]\n}, { timestamps: true })\n\nexport type UserSchema = {\n  _id?: Types.ObjectId;\n  username: string;\n  email: string;\n  isProAccount?: boolean;\n  password?: string;\n  profilePicture?: string;\n  avatar: string;\n  biography?: string;\n  gender?: 'male' | 'female';\n  birthday?: number;\n  hobbies?: string;\n  activityDate?: Date;\n  language: string;\n  translatedLanguage: string;\n  transactions?: {\n    date: number;\n    price: number;\n    currency: string;\n    exp: number;\n  }[],\n  friends: string[]\n}\n\ninterface IUser {\n  username: string;\n  email: string;\n  isProAccount: boolean;\n  token: string;\n  refreshToken: string;\n}\n\ninterface IUserMethods {\n  setPassword(password: string): Promise<void>;\n  validPassword(password: string): Promise<boolean>;\n  generateJWT(): string;\n  generateJWRT(token: string): string;\n  toAuthJSON(tokenOuter?: string): IUser\n}\n//mongo88\nuserSchema.methods.setPassword = async function (password: string) {\n  const hashedPassword = await bcrypt.hash(password, 12)\n  this.password = hashedPassword\n}\n\nuserSchema.methods.validPassword = async function (password: string): Promise<boolean> {\n  const isMatch = await bcrypt.compare(password, this.password)\n  return isMatch\n}\n\nuserSchema.methods.generateJWT = function () {\n  const token = jwt.sign(\n    {\n      idUser: this._id,\n    },\n    process.env.jwtSecret || '',\n    {\n      expiresIn: '1d',\n      jwtid: '1'\n    }\n  )\n\n  return token\n}\n\nuserSchema.methods.generateJWRT = function refresh(token: string) {\n  // const token = this.toAuthJSON().token\n  const payload = jwt.decode(token) as JwtPayload;\n\n\n  delete payload.exp;\n  delete payload.iat;\n  delete payload.jti\n  return jwt.sign(payload, process.env.jwtSecret || '', { expiresIn: '2d', jwtid: '2' });\n\n  // delete payload.nbf;\n  // delete payload.jti; //We are generating a new token, if you are using jwtid during signing, pass it in refreshOptions\n  // const localJwtSignOptions = Object.assign({}, { jwtid: refreshOptions.jwtid }, {expiresIn: '1h'});\n  // The first signing converted all needed options into claims, they are already in the payload\n}\n\nuserSchema.methods.toAuthJSON = function (oldToken?: string) {\n  const { username, email, isProAccount, _id, avatar, profilePicture, language, translatedLanguage } = this\n  const token = oldToken || this.generateJWT();\n  return {\n    username,\n    email,\n    isProAccount,\n    token,\n    avatar,\n    profilePicture,\n    refreshToken: this.generateJWRT(token),\n    idUser: _id,\n    language,\n    translatedLanguage\n  }\n}\n\nexport const User = model('User', userSchema)\n","module.exports = require(\"reflect-metadata\");","\nimport { Schema, model } from 'mongoose'\n\nexport const friendsSchema = new Schema({\n  requester: { type: Schema.Types.ObjectId, ref: 'User' },\n  recipient: { type: Schema.Types.ObjectId, ref: 'User' },\n  status: {\n    type: Number,\n    enums: [\n      0,    //'add friend',\n      1,    //'requested',\n      2,    //'pending',\n      3,    //'friends'\n    ]\n  }\n}, { timestamps: true })\n\nexport const Friend = model('Friends', friendsSchema)\n","\nimport { Schema, model } from 'mongoose'\n\nexport const roomSchema = new Schema({\n  admin: { type: Schema.Types.ObjectId, ref: 'User' },\n  moderators: [{ type: Schema.Types.ObjectId, ref: 'User' }],\n  users: [{ type: Schema.Types.ObjectId, ref: 'User' }],\n  messages: [{\n    msg: String,\n    author: Schema.Types.ObjectId,\n    date: Date,\n  }],\n}, { timestamps: true })\n\nexport const Room = model('Rooms', roomSchema)\n","import \"reflect-metadata\";\nimport express, { Express } from \"express\";\n\nimport ip from \"ip\";\nimport mongoose, { Model } from 'mongoose'\nimport { HttpServer } from \"./modules/HttpServer\";\nimport { myContainer } from \"./containerDI\"; \n\nconsole.log('local ip my computer: ', ip.address());\n \n\nasync function start() {\n  \n  const server = new HttpServer<typeof mongoose>(express, mongoose, myContainer)\n  console.log('used dependency injection')\n\n  server.listen()\n  await server.connectToDB()\n  \n}\n\n(async () => {\n\n  await start();\n})();\n\n","module.exports = require(\"express\");","module.exports = require(\"ip\");","import express, { Express, Router } from \"express\";\n// import { router } from \"../routes\";\nimport { ErrorHandleMiddleware } from \"../middleware/errorHandlingMiddleware\";\n// import { mongoURI, port } from './../../config/default.json'\nimport { Cors, DB, IFileController, IServer, TYPES } from \"../interfaces\";\nimport { Container } from \"inversify\";\nimport { InversifyExpressServer } from \"inversify-express-utils\";\nimport { mainModule } from \"../containerDI\";\nimport cors, { CorsRequest } from 'cors'\nimport * as http from \"http\";\n\nexport class HttpServer<T, O = any, C = any> implements IServer {\n  private app!: InversifyExpressServer\n  constructor(\n    private framework: typeof express,\n    private dataBase: DB<T, O, C>,\n    private containerDI: Container\n  ) {\n    console.log(1)\n    this.app = new InversifyExpressServer(containerDI)\n    containerDI.load(mainModule)\n    console.log(2)\n    this.app.setConfig((app) => {\n      app.use(cors())\n      app.use(this.framework.json())\n      app.use(this.framework.urlencoded({ extended: false }))\n    })\n    console.log(3)\n    this.app.setErrorConfig((app) => {\n      app.use(ErrorHandleMiddleware)\n    })\n    console.log(4)\n    \n  }\n\n  async connectToDB() {\n    try {\n      console.log(7)\n      await this.dataBase.connect(process.env.mongoURI || '')\n      console.log(8)\n    } catch (e) {\n      if (e instanceof Error) {\n        console.log('Server error', e.message)\n      }\n      process.exit(1)\n    }\n  }\n\n  useRouter() {\n    // this.app.use('/api', this.router)\n  }\n\n  listen() {\n    console.log(5)\n    const build =  this.app.build()\n    // this.app.build.\n    console.log(6)\n    const app = build.listen(process.env.PORT || '3000');\n    // build.on('request', app as any)\n    console.log(`Application listening on port ${process.env.PORT}...`);\n\n    this.containerDI.bind<http.Server>(TYPES.App).toConstantValue(app);\n   \n  }\n}\n","import { ApiError } from './../error/ApiError'\n\nexport function ErrorHandleMiddleware(err: any, _req: any, res: any, _next: any) {\n  const message = err.message || 'Error'\n\n  if (err instanceof ApiError) {\n\n    return res.status(err.status).json({ message })\n  }\n\n  return res.status(500).json({ message })\n}","import ip from \"ip\";\n// import { Fs, GridFS } from \"./gridFS\";\nimport { ApiError } from \"../error/ApiError\";\nimport { FileSchema, FS } from \"./intefaces\";\n// import { gridFs } from \"./gridFS\";\nimport { NextFunction } from \"express\";\nimport 'reflect-metadata';\nimport { injectable, inject } from \"inversify\";\nimport { TYPES } from \"./../interfaces/types\";\nimport { IFileController } from \"../interfaces\";\nimport { BaseHttpController, controller, httpDelete, httpGet, httpPost } from \"inversify-express-utils\";\nimport { authMiddleWare } from \"../middleware/authMiddleware\";\nimport { upload } from \"../middleware/file\";\n\n// @injectable()\n@controller('/api/file')\nexport class FileController implements IFileController {\n  constructor(@inject(TYPES.Fs) private fs: FS<FileSchema>) { }\n\n  @httpPost('/upload', authMiddleWare, upload.single('file'))\n  async uploadPhoto(req: any, res: any) {\n    // res.\n\n    if (req.file === undefined) return res.send(\"you must select a file.\");\n\n    // const imgUrl = `https://build-wheat-rho.vercel.app/api/file/${req.file.filename}`\n    const imgUrl = `https://wordsback.herokuapp.com/api/file/${req.file.filename}`\n\n    // `${this.URL}/avatar/${req.file.filename}`;\n    return res.send(imgUrl);\n  }\n\n\n  @httpGet('/:filename')\n  async getPhoto(req: any, res: any, next: NextFunction) {\n\n    try {\n\n      const file: any = await this.fs.findOne(req.params.filename);\n      if (file) {\n        res.setHeader('content-type', 'application/octet-stream');\n        const buffer = await this.fs.getFileBuffer(file.filename)\n        return res.send(buffer)\n      }\n      return next(ApiError.badRequest('photo not a found'))\n    } catch (error) {\n\n      return res.send('not found');\n    }\n  }\n\n  @httpDelete('/:filename', authMiddleWare)\n  async deletePhoto(req: any, res: any, next: NextFunction) {\n    try {\n\n      const result = await this.fs.findOne(req.params.filename);\n      if (result?._id) {\n        const remove = this.fs.delete(result._id)\n        return res.send(\"success\");\n      }\n      return next(ApiError.badRequest('photo not a found'))\n      // const removeFile = await this.gfs.files.findOneAndDelete({ filename: req.params.filename});\n      // const removeChunk = await this.gfs.collection('photos.chunks').findOneAndDelete({files_id: result?._id})\n\n    } catch (error) {\n      console.log(error);\n      res.send(\"An error occur.\");\n    }\n  }\n}\n\n// export const fileController = new FileController(gridFs)\n\n\n// export const fileController = container.registerSingleton<FileController>()\n","\nimport mongoose from 'mongoose';\nimport multer from 'multer'\nimport { GridFsStorage } from 'multer-gridfs-storage'\n// import { mongoURI, port } from './../../config/default.json'\nimport GridFsStream from \"gridfs-stream\";\n\n// const conn = mongoose.createConnection(mongoURI);\n// const conn = mongoose.connection;\n// //Init gfs \n// let gfs; \n// conn.once('open', ()=>{\n//     gfs = GridFsStream(conn.db, mongoose.mongo);\n//     gfs.collection('photos');\n// })\n\n// export function initFileMiddleWare(db: typeof mongoose) {\n//     const storage = new GridFsStorage({\n//         url: `${mongoURI}/English`,\n//         options: { useNewUrlParser: true, useUnifiedTopology: true },\n//         file: (_req, file) => {\n//             const match = [\"image/png\", \"image/jpeg\"];\n//             \n//             if (match.indexOf(file.mimetype) === -1) {\n//                 const filename = `${Date.now()}-any-name-${file.originalname}`;\n//                 return filename;\n//             }\n\n//             return {\n//                 bucketName: \"photos\",\n//                 filename: `${Date.now()}-any-name-${file.originalname}`,\n//             };\n//         },\n//     });\n// }\n\nconst storage = new GridFsStorage({\n  url: process.env.mongoURI || '',\n  options: { useNewUrlParser: true, useUnifiedTopology: true },\n  file: (_req, file) => {\n    const match = [\"image/png\", \"image/jpeg\"];\n\n    // if (match.indexOf(file.mimetype) === -1) {\n    //     const filename = `${Date.now()}-any-name-${file.originalname}`;\n    //     return filename;\n    // }\n\n    return {\n      bucketName: \"photos\",\n      filename: `${Date.now()}-asset-${file.originalname}`,\n    };\n  },\n});\n\nexport const upload = multer({ storage });","module.exports = require(\"multer\");","module.exports = require(\"multer-gridfs-storage\");","import mongoose, { InferId } from 'mongoose';\nimport GridFsStream, { } from \"gridfs-stream\";\nimport {\n  FileSchema,\n  //  FS\n} from '../controllers/intefaces';\nimport { inject, injectable } from 'inversify';\nimport { TYPES } from '../interfaces';\nimport { FS } from './../interfaces/modules'\n\n// @injectable()\nexport class GridFS extends FS<FileSchema, mongoose.Connection>{\n  private fs!: GridFsStream.Grid\n  private fsBucket!: any\n  // private conn!: any\n\n  constructor(protected connection: mongoose.Connection) {\n    super(connection)\n    connection.once('open', () => {\n\n      this.fsBucket = new mongoose.mongo.GridFSBucket(connection.db, {\n        bucketName: 'photos'\n      })\n\n      this.fs = GridFsStream(connection.db, mongoose.mongo);\n      this.fs.collection('photos');\n    })\n  }\n\n  protected openDownloadStreamByName(filename: string) {\n    return this.fsBucket.openDownloadStreamByName(filename)\n  }\n\n  async findOne(filename: string) {\n    return await this.fs.files.findOne<FileSchema>({ filename })\n  }\n\n  protected delete(id: InferId<FileSchema>) {\n    return this.fsBucket.delete(id)\n  }\n\n  protected async getFileBuffer(filename: string) {\n    const stream = this.openDownloadStreamByName(filename);\n    stream.read();\n    \n    return new Promise<Buffer>((resolve, reject) => {\n      const chunks: any = []\n      stream.on('data', (data: any) => {\n        chunks.push(data);\n      });\n      stream.on('end', () => {\n        const data = Buffer.concat(chunks);\n        \n\n        resolve(data);\n      });\n      stream.on('error', (err: any) => {\n        reject(err);\n      });\n    });\n  }\n}\n\n// const c = new GridFS(new mongoose.Connection)\n\n// c\n// export const gridFs = new GridFS(mongoose.connection)\n","module.exports = require(\"gridfs-stream\");","import { inject, injectable } from \"inversify\";\nimport { TYPES } from \"../types\";\n\n@injectable()\nexport abstract class FS<T1 = any, T2 = any, T3 = any> {\n  // @inject(TYPES.DbClient) protected abstract conn: T2\n  constructor(@inject(TYPES.DbClient) protected connection: T2) { }\n\n  protected abstract getFileBuffer(filename: string): Promise<Buffer>;\n  protected abstract findOne(filename: string): Promise<T1 | null>;\n  protected abstract openDownloadStreamByName(filename: string): T3;\n  protected abstract delete(id: T3): T3;\n}","import { ApiError } from \"../error/ApiError\";\nimport { Dictionary, TranslatedDictionary } from \"../models/Dictionary\";\nimport { Repetition } from \"../models/Repetitions\";\nimport { User } from \"../models/User\";\nimport { deleteDocument, getDataDocument, patchDocument, responseAllCollection, setDocument } from \"../utils/base\";\nimport jwt, { JwtPayload } from 'jsonwebtoken'\n// import { jwtSecret } from './../../config/default.json'\nimport { controller, httpPost, httpGet } from \"inversify-express-utils\";\nimport { inject, injectable } from \"inversify\";\n\nexport interface Auth {\n  login(...any: any): Promise<any>\n  registration(...any: any): Promise<any>\n  refresh(...any: any): Promise<any>\n  getUser(...any: any): Promise<any>\n}\n\n\n@controller(\"/api/auth\")\nexport class AuthController implements Auth {\n\n  // @inject() public _actorRepository: ActorRepository;\n\n  @httpPost('/login')\n  async login(req: any, res: any, next: any) {\n    const { password, username } = req.body\n    const user = await User.findOne({ username })\n\n    if (!user) {\n      return next(ApiError.internal('User not a found'))\n    }\n    let comparePassword = await user.validPassword(password);\n    if (!comparePassword) {\n      return next(ApiError.internal('Write correct password'))\n    }\n    const json = user.toAuthJSON()\n\n    return res.json(json)\n  }\n  @httpPost('/registration')\n  async registration(req: any, res: any, next: any) {\n    const { email, password, username } = req.body\n    // if (!email || !password) {\n    //   return next(ApiError.badRequest('Некорректный email или password'))\n    // }\n    const candidate = await User.findOne({ email })\n    if (candidate) {\n      return next(ApiError.badRequest('The User now exist'))\n    }\n\n    const user = new User({\n      username,\n      email,\n      language: 'en',\n      translatedLanguage: 'ua'\n    })\n\n    await user.setPassword(password)\n    await user.save()\n    const json = user.toAuthJSON()\n\n    return res.json(json)\n  }\n\n  @httpGet('/getUser/:refreshToken')\n  async refresh(req: any, res: any, next: any) {\n    try {\n      const { refreshToken } = req.params\n      const decoded = jwt.verify(refreshToken, process.env.jwtSecret || '') as JwtPayload\n\n      const user = await User.findOne({ _id: decoded?.idUser })\n      if (!user) {\n        return next(ApiError.internal('User not a found'))\n      }\n\n      const json = user.toAuthJSON(refreshToken)\n\n      return res.json(json)\n    } catch {\n      return next(ApiError.notAuth('Refresh token expired'))\n    }\n  }\n\n  @httpGet('/refresh/:token')\n  async getUser(req: any, res: any, next: any) {\n\n    try {\n      const { token } = req.params\n      const decoded = jwt.verify(token, process.env.jwtSecret || '')\n\n\n      if (typeof decoded !== 'string') {\n        const user = await User.findOne({ _id: decoded?.idUser })\n        if (!user) {\n          return next(ApiError.internal('User not a found'))\n        }\n\n        const json = user.toAuthJSON(token)\n\n        return res.json(json)\n      }\n      return next(ApiError.internal('Can\\'t decode token'))\n    } catch (e) {\n      return next(ApiError.notAuth('Token expired'))\n    }\n  }\n}\n\nexport const authController = new AuthController()\n","module.exports = require(\"bcryptjs\");","\nimport { User } from \"../models/User\";\nimport { updateUser } from \"../utils/base\";\n\n\nimport { controller, httpPatch, httpGet } from \"inversify-express-utils\";\nimport { authMiddleWare } from \"../middleware/authMiddleware\";\nimport { Friend } from \"../models/Friend\"; \nimport { findFriends } from \"../utils/friends\";\n\n@controller(\"/api/user\", authMiddleWare)\nexport class UserController {\n\n  @httpGet('/friends')\n  async friends(request: any, response: any) {\n    const { idUser } = request._user;\n     \n    const users = await findFriends(User, Friend, idUser)\n\n    const friends = users.filter(friend => friend.match.length)\n    \n\n    return response.send(friends)\n  }\n\n  @httpGet('/friendsCandidates')\n  async friendsCandidates(request: any, response: any) {\n    const { idUser } = request._user;\n \n    const users = await findFriends(User, Friend, idUser)\n    \n    const friends = users.filter(friend => !friend.match.length && friend._id.toString() !== idUser)\n    \n\n    return response.send(friends)\n  }\n \n  @httpPatch('/patchActivityDate')\n  async patchActivityDate(request: any, response: any) {\n\n    const { idUser } = request._user;\n\n    const userModel = await User.findOne({ _id: idUser })\n    const activityDate = new Date()\n\n    await User.findOneAndUpdate({ _id: idUser }, { ...userModel?.toObject(), activityDate }, { new: true })\n    return response.status(204).send()\n  }\n\n  @httpPatch('/patchAvatar')\n  async patchAvatar(request: any, response: any) {\n    const { avatar } = request.body\n\n    const updatedField = {\n      avatar\n    }\n\n    await updateUser(request, User, updatedField)\n\n    return response.status(204).send()\n  }\n\n  @httpPatch('/patchProfilePicture')\n  async patchProfilePicture(request: any, response: any) {\n    const { profilePicture } = request.body\n\n    const updatedField = {\n      profilePicture\n    }\n\n    await updateUser(request, User, updatedField)\n\n    return response.status(204).send()\n  }\n\n  @httpPatch('/patchTranslatedLanguage')\n  async patchLanguage(request: any, response: any) {\n    const { translatedLanguage } = request.body\n\n    const updatedField = {\n      translatedLanguage\n    }\n\n    const data = await updateUser(request, User, updatedField)\n    \n    return response.status(204).send(data?.toObject().language)\n  }\n\n  @httpPatch('/patchLanguage')\n  async patchTranslatedLanguage(request: any, response: any) {\n    const { language } = request.body\n\n    const updatedField = {\n      language\n    }\n\n    const data = await updateUser(request, User, updatedField)\n    \n    return response.status(204).send(data?.toObject().translatedLanguage)\n  }\n}\n\n\n// async function toBuffer (avatar: string)  {\n\n//  } \n\n\nexport const userController = new UserController()\n","import mongoose, { Model } from \"mongoose\";\n\nexport async function findFriends<T, T1, T2>(UserModel: Model<T, T1, T2>, FriendModel: Model<{}>, id: string) {\n  return UserModel.aggregate([\n    {\n      \"$lookup\": {\n        \"from\": FriendModel.collection.name,\n        localField: \"friends\",\n        foreignField: \"_id\",\n        \"let\": { \"friends\": \"$friends\" },\n        \"as\": \"match\",\n        \"pipeline\": [\n          {\n            \"$match\": {\n              \"recipient\": new mongoose.Types.ObjectId(id),\n              \"$expr\": { \"$in\": [\"$_id\", \"$$friends\"] }\n            }\n          }\n        ],\n      }\n    }\n  ])\n}","import { controller, httpGet, httpPatch, httpPost } from \"inversify-express-utils\";\nimport { authMiddleWare } from \"../middleware/authMiddleware\";\nimport { Dictionary, TranslatedDictionary } from \"../models/Dictionary\";\nimport { Repetition } from \"../models/Repetitions\";\nimport { deleteDocument, getDataDocument, patchDocument, responseAllCollection, setDocument } from \"../utils/base\";\n\n@controller('/api/repetitions', authMiddleWare) \nexport class RepetitionController {\n\n  @httpGet('/repetitions')\n  async getRepetitions(request: any, response: any) {\n \n    return await responseAllCollection(Repetition, response, request, true)\n  }\n\n  @httpPatch('/patchRepetition/:id')\n  async patchRepetition(request: any, response: any) {\n    const {id, oldValue} = await getDataDocument(request, Repetition)\n\n   return await patchDocument(Repetition, id, oldValue, request, response)\n  }\n   \n  @httpPost('/setRepetition')\n  async setRepetition(request: any, response: any) {\n    \n    return await setDocument(Repetition, request, response)\n  }\n  \n}\n\nexport const repetitionController = new RepetitionController()\n","\nimport { Schema, model } from 'mongoose'\n\nexport const repetitionSchema = new Schema({\n  key: String,\n  user: {\n    type: Schema.Types.ObjectId,\n    ref: 'User'\n  },\n  value: {\n    language: { type: String, required: true },\n    translatedTo: { type: String, required: true },\n    word: { type: String, required: true },\n    themes: {\n      type: Object,\n      required: false\n    },\n    otherTranslates: {\n      type: Object,\n      required: false\n    },\n    translate: { type: String, required: true },\n    synonyms: { type: Object, required: true },\n    partsOfSpeech: {\n      type: Object,\n      required: true\n    },\n    progress: {\n      type: [Object],\n      required: true\n    },\n    repeatDay: {\n      type: Number,\n      required: true\n    },\n    countRepeatAtStart: {\n      type: Number,\n      required: true\n    },\n    repeatAtStart: {\n      type: Boolean,\n      required: true\n    },\n    allMistakes: {\n      type: Number,\n      required: true\n    }\n  }\n},{ timestamps: true })\n\n\nexport const Repetition = model('Repetition', repetitionSchema)\n","import { controller, httpDelete, httpGet, httpPatch, httpPost } from \"inversify-express-utils\";\nimport { authMiddleWare } from \"../middleware/authMiddleware\";\nimport { Dictionary, StaticDictionary, StaticTranslatedDictionary, TranslatedDictionary } from \"../models/Dictionary\";\nimport { deleteDocument, getDataDocument, patchDocument, responseAllCollection, setDocument } from \"../utils/base\";\n\n@controller('/api/dictionaries', authMiddleWare)\nexport class DictionariesController {\n\n  @httpDelete('/dictionary/:id')\n  async deleteWord(request: any, response: any) {\n    const { id } = request.params;\n    const { idUser } = request._user;\n    \n    return deleteDocument(Dictionary, id, response, idUser)\n  }\n\n  @httpDelete('/translatedDictionary/:id')\n  async deleteTranslatedWord(request: any, response: any) {\n    const { id } = request.params;\n    const { idUser } = request._user;\n\n   return  deleteDocument(TranslatedDictionary, id, response, idUser)\n  }\n  \n  @httpGet('/dictionary')\n  async getDictionary(request: any, response: any) {\n \n    await responseAllCollection(Dictionary, response, request)\n  }\n\n  @httpGet('/staticDictionary')\n  async getStaticDictionary(request: any, response: any) {\n \n    return await responseAllCollection(StaticDictionary, response, request)\n  }\n\n  @httpGet('/staticTranslatedDictionary')\n  async getStaticTranslatedDictionary(request: any, response: any) {\n \n    return await responseAllCollection(StaticTranslatedDictionary, response, request)\n  }\n\n  @httpGet('/translatedDictionary')\n  async getTranslatedDictionary(request: any, response: any) {\n \n    return  await responseAllCollection(TranslatedDictionary, response, request)\n  }\n\n  @httpPatch('/patchDictionary/:id')\n  async patchDictionary(request: any, response: any) {\n    const { id, oldValue } = await getDataDocument(request, Dictionary)\n\n    return await patchDocument(Dictionary, id, oldValue, request, response)\n  }\n\n\n  @httpPatch('/patchStaticDictionary/:id')\n  async patchStaticDictionary(request: any, response: any) {\n    const { id, oldValue } = await getDataDocument(request, StaticDictionary)\n\n    return await patchDocument(StaticDictionary, id, oldValue, request, response)\n  }\n\n\n  @httpPatch('/patchTranslatedDictionary/:id')\n  async patchTranslatedDictionary(request: any, response: any) {\n    const { id, oldValue } = await getDataDocument(request, TranslatedDictionary)\n\n    return await patchDocument(TranslatedDictionary, id, oldValue, request, response)\n  }\n\n\n  @httpPatch('/patchStaticTranslatedDictionary/:id')\n  async patchStaticTranslatedDictionary(request: any, response: any) {\n    const { id, oldValue } = await getDataDocument(request, StaticTranslatedDictionary)\n\n    return await patchDocument(StaticTranslatedDictionary, id, oldValue, request, response)\n  }\n\n  @httpPost('/setDictionary')\n  async setDictionary(request: any, response: any) {\n   return  await setDocument(Dictionary, request, response)\n  }\n\n\n  @httpPost('/setTranslatedDictionary')\n  async setTranslatedDictionary(request: any, response: any) {\n    return await setDocument(TranslatedDictionary, request, response)\n  }\n\n\n  @httpPost('/setStaticDictionary')\n  async setStaticDictionary(request: any, response: any) {\n    return await setDocument(StaticDictionary, request, response)\n  }\n\n  @httpPost('/setStaticTranslatedDictionary')\n  async setStaticTranslatedDictionary(request: any, response: any) {\n    return await setDocument(StaticTranslatedDictionary, request, response)\n  }\n}\n\nexport const dictionariesController = new DictionariesController()\n","\nimport { Schema, model } from 'mongoose'\n\nexport const dictionarySchema = new Schema({\n  key: String,\n  user: {\n    type: Schema.Types.ObjectId,\n    ref: 'User'\n  },\n  value: {\n    language: { type: String, required: true },\n    translatedTo: { type: String, required: true },\n    word: { type: String, required: true },\n    themes: {\n      type: Object,\n      required: false\n    },\n    otherTranslates: {\n      type: Object,\n      required: false\n    },\n    translate: { type: String, required: true },\n    synonyms: { type: Object, required: true },\n    partsOfSpeech: {\n      type: Object,\n      required: true\n    }\n  }\n},{ timestamps: true })\n\nexport const Dictionary = model('Dictionary', dictionarySchema)\nexport const StaticDictionary = model('StaticDictionary', dictionarySchema)\nexport const TranslatedDictionary = model('TranslatedDictionary', dictionarySchema)\nexport const StaticTranslatedDictionary = model('StaticTranslatedDictionary', dictionarySchema)\n","\nimport { User } from \"../models/User\";\nimport { updateUser } from \"../utils/base\";\n\n\nimport { controller, httpPatch, httpGet } from \"inversify-express-utils\";\nimport { authMiddleWare } from \"../middleware/authMiddleware\";\nimport { Friend } from \"../models/Friend\";\n\n@controller(\"/api/friends\", authMiddleWare)\nexport class FriendsController {\n\n  @httpGet('/requestBeFriend')\n  async requestBeFriend(request: any, response: any) {\n\n    const { idUser } = request._user;\n    const { candidateFriendId } = request.query;\n    \n    const docA = await Friend.findOneAndUpdate(\n      { requester: idUser, recipient: candidateFriendId },\n      { $set: { status: 1 } },\n      { upsert: true, new: true }\n    )\n    const docB = await Friend.findOneAndUpdate(\n      { recipient: idUser, requester: candidateFriendId },\n      { $set: { status: 2 } },\n      { upsert: true, new: true }\n    )\n    const updateUserA = await User.findOneAndUpdate(\n      { _id: idUser },\n      { $push: { friends: docA._id } }\n    )\n    const updateUserB = await User.findOneAndUpdate(\n      { _id: candidateFriendId },\n      { $push: { friends: docB._id } }\n    )\n    \n    return response.status(204).send()\n  }\n\n  @httpGet('/accept')\n  async accept(request: any, response: any) {\n    const { idUser } = request._user;\n    const { candidateFriendId } = request.query;\n\n    await Friend.findOneAndUpdate(\n      { requester: idUser, recipient: candidateFriendId },\n      { $set: { status: 3 } }\n    )\n    await Friend.findOneAndUpdate(\n      { recipient: idUser, requester: candidateFriendId },\n      { $set: { status: 3 } }\n    )\n\n    return response.status(204).send()\n  }\n\n  @httpGet('/reject')\n  async reject(request: any, response: any) {\n    const { idUser } = request._user;\n    const { candidateFriendId } = request.query;\n\n    const docA = await Friend.findOneAndRemove(\n      { requester: idUser, recipient: candidateFriendId }\n    )\n    const docB = await Friend.findOneAndRemove(\n      { recipient: idUser, requester: candidateFriendId }\n    )\n\n    if (docA?._id && docB?._id) {\n      \n      const updateUserA = await User.findOneAndUpdate(\n        { _id: idUser },\n        { $pull: { friends: docA._id } }\n      )\n      const updateUserB = await User.findOneAndUpdate(\n        { _id: candidateFriendId },\n        { $pull: { friends: docB._id } }\n      )\n\n      return response.status(204).send()\n    }\n\n    \n    return response.status(500).send()\n  }\n\n}\n\n\nexport const friendsController = new FriendsController()\n","module.exports = require(\"socket.io\");","import { Container, inject, injectable } from \"inversify\";\nimport * as http from \"http\";\n// import * as socketIo from 'socket.io'\nimport * as socketIo from 'socket.io';\nimport { TYPES } from \"../interfaces\";\nimport { myContainer } from \"../containerDI\";\nimport { Room } from \"../models/Room\";\nimport mongoose from \"mongoose\";\n\n\n@injectable()\nexport class WsServer {\n  private server!: socketIo.Server\n  private app!: http.Server\n  private usersOnline: {\n    [roomID: string]: {\n      [userID: string]: string\n    }\n  } = {}\n  constructor(@inject(TYPES.Ws) private ws: typeof socketIo.Server) {\n    const app: http.Server = myContainer.get(TYPES.App)\n    \n    this.app = app\n    this.server = new ws(app, {\n      // Socket.IO options\n      // transports: [\"websocket\"]\n    });\n    // console.log(this.server)\n    // this.server.on('request', this.app as any)\n \n  }\n\n \n\n  public joinToRoom(roomID: string, userID: string) {\n \n    this.server.once('connection', async (socket) => {\n      // debugger\n      // console.log(socket)\n   \n      this.usersOnline = {...this.usersOnline, [roomID]: {...this.usersOnline[roomID], [userID]: userID}}\n      console.log({usersOnline: this.usersOnline})\n      console.log(`${userID} user connected`);\n      // const idRoom = ''\n \n\n      const roomMsg = await Room.findOne({ _id: roomID })\n      this.server.emit(`chat:${roomID}:created`, roomMsg?.toObject().messages)\n      this.server.emit(`chat:${roomID}:online`, this.usersOnline[roomID])\n\n     \n      socket.on(`chat:${roomID}`, async (msg) => {\n        const newMsg = {\n          msg,\n          author: new mongoose.Types.ObjectId(userID),\n          date: new Date(),\n        }\n        await Room.updateOne({ _id: roomID }, {\n          \"$push\": {\n            \"messages\": newMsg\n          }\n        })\n        \n        this.server.emit(`chat:${roomID}`, newMsg);\n      });\n      socket.on(`chat:${roomID}:typing`, (user: string) => {\n  \n        console.log(`${user} typing`); \n        this.server.emit(`chat:${roomID}:typing`, user); \n      });\n\n      socket.on(`chat:${roomID}:cancelTyping`, () => { \n        this.server.emit(`chat:${roomID}:cancelTyping`, userID);  \n      });\n \n      socket.on('disconnect', () => { \n        console.log(`${userID} user disconnected`);\n        \n        delete this.usersOnline[roomID][userID];  \n        this.server.emit(`disconnect:${roomID}`, userID); \n        this.server.emit(`chat:${roomID}:online`, this.usersOnline[roomID])\n        this.server.emit(`chat:${roomID}:cancelTyping`, userID);  \n      });\n    });\n  }\n\n}\n","\nimport { User } from \"../models/User\";\nimport { updateUser } from \"../utils/base\";\n\n\nimport { controller, httpPatch, httpGet, httpDelete } from \"inversify-express-utils\";\nimport { authMiddleWare } from \"../middleware/authMiddleware\";\nimport { Friend } from \"../models/Friend\";\nimport { Room } from \"../models/Room\";\nimport mongoose from \"mongoose\";\nimport { myContainer } from \"../containerDI\";\nimport { TYPES } from \"../interfaces\";\nimport { WsServer } from \"../modules/WsServer\";\n\n@controller(\"/api/room\", authMiddleWare)\nexport class RoomController {\n\n  @httpGet('/createRoom')\n  async createRoom(request: any, response: any) {\n\n    const { idUser } = request._user;\n    // const { candidateFriendId } = request.query;\n    \n    const room = new Room({\n      admin: new mongoose.Types.ObjectId(idUser),\n      users: [new mongoose.Types.ObjectId(idUser)],\n      messages: []\n    }) \n\n    await room.save()\n    \n    \n    return response.json(room.toObject())\n  }\n\n  @httpGet('/getRooms')\n  async getRooms(request: any, response: any) {\n\n    const { idUser } = request._user;\n    // const { candidateFriendId } = request.query;\n    \n    const rooms = await Room.find({ \"users\": new mongoose.Types.ObjectId(idUser) })\n    \n    return response.json(rooms)\n  }\n\n  @httpGet('/setUserInRoom')\n  async setUserInRoom(request: any, response: any) {\n\n    const { idUser } = request._user;\n    const { friendId } = request.query;\n    const { roomId } = request.query;\n    \n    const updatedRoom = await Room.updateOne({_id: roomId}, {\n      \"$push\": {\n          \"users\": friendId\n      }}\n    )\n    \n    \n    return response.json(updatedRoom)\n  }\n\n  @httpGet('/joinToRoom')\n  async joinToRoom(request: any, response: any) {\n\n    const { idUser } = request._user; \n    const { roomID } = request.query;\n  \n    const ws = myContainer.get<WsServer>(TYPES.WsServer)\n    \n    ws.joinToRoom(roomID, idUser)\n\n    return response.send('ok')\n  }\n\n  @httpDelete('/deleteRoom')\n  async deleteRoom(request: any, response: any) {\n\n    const { idUser } = request._user; \n    const { roomID } = request.query;\n  \n    \n    const rooms = await Room.findOneAndDelete({_id: roomID},{ new: true })\n\n    return response.json(rooms)\n  }\n\n}\n\n\nexport const roomController = new RoomController()\n","\nimport { User } from \"../models/User\";\nimport { updateUser } from \"../utils/base\";\n\n\nimport { controller, httpPatch, httpGet, httpDelete } from \"inversify-express-utils\";\nimport { authMiddleWare } from \"../middleware/authMiddleware\";\nimport { Friend } from \"../models/Friend\";\nimport { Room } from \"../models/Room\";\nimport mongoose from \"mongoose\";\nimport { myContainer } from \"../containerDI\";\nimport { TYPES } from \"../interfaces\";\nimport { WsServer } from \"../modules/WsServer\";\nimport { Browser } from \"../modules/Browser\";\nimport { inject } from \"inversify\";\n\n@controller(\"/api/translate\", authMiddleWare)\nexport class TranslateController {\n  constructor(@inject(TYPES.Browser) private browser: typeof Browser) { }\n\n  @httpGet('/translate')\n  async translate(request: any, response: any) {\n\n    const { idUser } = request._user;\n    const { language, translatedLanguage, word } = request.query\n \n    // english language - russian translatedLanguage\n    const browser = new this.browser(`https://context.reverso.net/translation/${language}-${translatedLanguage}/${word}`)\n    console.log('before init browser')\n    await browser.initBrowser();\n    console.log('inited browser')\n    const data = await browser.getWindowData()\n    console.log('after init browser')\n    console.log(data)\n    await browser.closePage()\n\n    return response.json(data)\n  }\n\n}\n\n\n// export const roomController = new RoomController()\n","\nimport { InversifyExpressServer } from \"inversify-express-utils\";\nimport puppeteer, { BrowserContext, BrowserLaunchArgumentOptions, Page, Puppeteer, PuppeteerNode, PuppeteerNodeLaunchOptions, Browser as PuppeteerBrowser } from 'puppeteer';\nimport { getPuppeteerArgs } from \"../utils/base\"; \n\nexport class Browser {\n  private url!: string\n  private page!: Page\n  private browser!: PuppeteerBrowser | BrowserContext;\n  closePage!: () => Promise<void>\n  constructor(url: string\n  ) {\n    this.url = url\n  }\n\n  async initBrowser() {\n    await this.createBrowser()\n    console.log('created browser')\n    await this.page.goto(this.url, {\n      waitUntil: 'networkidle2',\n    })\n    console.log('go to')\n      // this.page.waitForSelector('.translation'),\n      // await this.page.waitForNavigation()\n  \n \n  }\n\n  private async createBrowser() {\n    const puppeteerNode = (puppeteer as unknown as PuppeteerNode)\n    const browser = await this.getBrowserInstance(puppeteerNode);\n    // const context = await browser.createIncognitoBrowserContext();\n    // const currentContext = this.url ? context : browser;\n    console.log('create context')\n    this.browser = browser\n    this.page = await browser.newPage();\n    this.closePage = async () => {\n     \n        await browser.close();\n     \n    }\n  }\n\n  private async getBrowserInstance(puppeteer: PuppeteerNode,\n    //  browserURL?: string,\n     rendererOptions: BrowserLaunchArgumentOptions = {}) {\n    // if (browserURL) {\n    //   return puppeteer.connect({\n    //     browserURL,\n    //   });\n    // }\n    return puppeteer.launch({\n      args: getPuppeteerArgs(),\n      // headless: false,\n      // devtools: true,\n      ...rendererOptions\n    });\n  }\n\n  async getWindowData() {\n    // const propsObj = {};\n    // const context = { propsObj, windowProps };\n    // console.log(cb)\n    // const cbFunc = cb\n    // console.log(cbFunc)\n   \n\n    const windowData = await this.page.evaluate(async () => {\n      // for (const prop of context.windowProps) {\n        // const clonedObject = await clone(window[prop]);\n        // context.propsObj[prop] = clonedObject;\n      // }\n      // const windowClone = await clone(window.document)\n      // // return context.propsObj;\n      // // alert(cbFunc)\n  \n      // return window.cb()\n      return  [...window.document.querySelectorAll('.translation')].filter((el: any) => el.title).map((elem: any) => {\n        const titleDOM = new DOMParser().parseFromString(elem.title, \"text/html\").querySelector('.nobold') as Element\n        let translate = ''\n        let partsOfSpeech: string[] = []\n        console.log(  titleDOM.childNodes)\n   \n        titleDOM.childNodes.forEach((node: any, index: number) => {\n          if (node.innerText) translate = node.innerText\n          if (index === 2) {\n            if (node.textContent.includes('/')) {\n              node.textContent.split('/').forEach((speech: string) => partsOfSpeech.push(speech.trim().toLowerCase()))\n              return\n            }\n            partsOfSpeech.push(node.textContent.split(' ')[0].toLowerCase())\n          }\n        })\n       \n\n        return {\n          translate,\n          partsOfSpeech\n        }\n      })\n    });\n\n    return windowData;\n  }\n  // [...window.document.querySelectorAll('.translation')].map((elem: any) => console.log(elem.title))\n}\n\n\n\n// (async () => {\n//   const browser = new Browser('https://context.reverso.net/translation/english-russian/drop')\n//   console.log(1)\n//   await browser.initBrowser();\n//   const data  = await browser.getWindowData()\n//   console.log(2)\n//   console.log(data)\n//   await browser.closePage()\n// })();\n\n","module.exports = require(\"puppeteer\");","module.exports = require(\"cors\");"],"sourceRoot":""}