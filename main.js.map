{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"tslib\"","webpack:///external \"mongoose\"","webpack:///external \"inversify-express-utils\"","webpack:///./src/middleware/authMiddleware.ts","webpack:///./src/error/ApiError.ts","webpack:///./src/interfaces/types.ts","webpack:///external \"inversify\"","webpack:///external \"jsonwebtoken\"","webpack:///./src/models/User.ts","webpack:///./src/utils/base.ts","webpack:///external \"reflect-metadata\"","webpack:///./src/interfaces/index.ts","webpack:///./src/containerDI/index.ts","webpack:///./src/models/Friend.ts","webpack:///./src/main.ts","webpack:///external \"express\"","webpack:///external \"ip\"","webpack:///./src/modules/Server.ts","webpack:///./src/middleware/errorHandlingMiddleware.ts","webpack:///./src/controllers/fileController.ts","webpack:///./src/middleware/file.ts","webpack:///external \"multer\"","webpack:///external \"multer-gridfs-storage\"","webpack:///./src/modules/gridFS.ts","webpack:///external \"gridfs-stream\"","webpack:///./src/interfaces/modules/index.ts","webpack:///./src/controllers/authController.ts","webpack:///external \"bcryptjs\"","webpack:///./src/controllers/userController.ts","webpack:///./src/controllers/repetitionController.ts","webpack:///./src/models/Repetitions.ts","webpack:///./src/controllers/dictionariesController.ts","webpack:///./src/models/Dictionary.ts","webpack:///./src/controllers/friendsController.ts","webpack:///external \"cors\""],"names":["authMiddleWare","req","_res","next","method","token","headers","authorization","split","ApiError_1","notAuth","decoded","jsonwebtoken_1","verify","process","_user","e","exports","ApiError","status","message","Error","TYPES","Fs","Symbol","FileController","Server","App","DbClient","Repetition","Dictionary","User","Friend","Auth","mongoose_1","username","type","String","lowercase","unique","required","match","index","email","isProAccount","Boolean","password","profilePicture","avatar","biography","gender","birthday","Number","hobbies","activityDate","Date","language","translatedLanguage","transactions","date","price","currency","exp","friends","Types","ObjectId","ref","timestamps","methods","setPassword","bcryptjs_1","hash","hashedPassword","validPassword","compare","isMatch","generateJWT","sign","idUser","_id","expiresIn","jwtid","generateJWRT","refresh","payload","decode","iat","jti","toAuthJSON","oldToken","refreshToken","parseDictionaryCollection","dictionary","res","Object","values","map","parseDocument","reduce","acc","val","word","model","get","console","log","deleteDocument","Model","id","response","user","findOneAndRemove","doc","send","responseAllCollection","request","repetition","query","find","collection","patchDocument","oldValue","findOneAndUpdate","value","body","getDataDocument","params","findOne","oldWord","toObject","setDocument","key","documentAlreadyExist","document","save","updateUser","updatedField","userModel","enumerable","types_1","myContainer","inversify_1","bind","_unbind","_isBound","_rebind","_unbindAsync","_onActivation","_onDeactivation","interfaces_1","to","authController_1","inSingletonScope","userController_1","friendsController_1","dictionariesController_1","repetitionController_1","toConstantValue","connection","gridFS_1","fileController_1","registerController","constructor","inversify_express_utils_1","Controller","whenTargetNamed","name","requester","recipient","enums","require","ip_1","address","start","server","Server_1","express_1","containerDI_1","listen","connectToDB","framework","dataBase","containerDI","app","load","setConfig","use","json","urlencoded","extended","setErrorConfig","errorHandlingMiddleware_1","connect","exit","build","ErrorHandleMiddleware","err","_req","_next","fs","file","undefined","imgUrl","filename","setHeader","getFileBuffer","buffer","badRequest","result","remove","tslib_1","authMiddleware_1","file_1","single","storage","multer_gridfs_storage_1","url","options","useNewUrlParser","useUnifiedTopology","bucketName","now","originalname","GridFS","fsBucket","once","mongo","GridFSBucket","db","openDownloadStreamByName","files","stream","read","Promise","resolve","reject","chunks","on","data","push","Buffer","concat","modules_1","FS","AuthController","User_1","internal","comparePassword","candidate","UserController","usersModel","aggregate","Friend_1","localField","foreignField","filter","friend","length","toString","RepetitionController","Repetitions_1","translatedTo","themes","otherTranslates","translate","synonyms","partsOfSpeech","progress","repeatDay","countRepeatAtStart","repeatAtStart","allMistakes","DictionariesController","Dictionary_1","FriendsController","candidateFriendId","$set","upsert","docA","docB","$push","updateUserA","updateUserB","$pull"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","module.exports = require(\"tslib\");","module.exports = require(\"mongoose\");","module.exports = require(\"inversify-express-utils\");","import jwt from 'jsonwebtoken'\nimport { ApiError } from '../error/ApiError'\n// import { jwtSecret } from './../../config/default.json'\n\nexport function authMiddleWare(req: any, _res: any, next: any) {\n  if (req.method === \"OPTIONS\") {\n    next()\n  }\n  try {\n    const token = req.headers.authorization.split(' ')[1] // Bearer asfasnfkajsfnjk\n\n    if (!token) {\n      return next(ApiError.notAuth('Token not found'))\n    }\n    const decoded = jwt.verify(token, process.env.jwtSecret || '')\n    req._user = decoded\n    next()\n  } catch (e) {\n    return next(ApiError.notAuth('Token expired'))\n  }\n};\n","export class ApiError extends Error {\n  status: number;\n  private constructor(status: number, message: string) {\n    super();\n    this.status = status\n    this.message = message\n  }\n\n  static badRequest(message: string) {\n    return new ApiError(404, message)\n  }\n\n  static internal(message: string) {\n    return new ApiError(500, message)\n  }\n\n  static forbidden(message: string) {\n    return new ApiError(403, message)\n  }\n\n  static notAuth(message: string) {\n    return new ApiError(401, message)\n  }\n}","const TYPES = {\n  Fs: Symbol.for(\"Fs\"),\n  FileController: Symbol.for(\"FileController\"), \n  Server: Symbol.for(\"Server\"),\n  App: Symbol.for(\"App\"),\n  DbClient: Symbol(\"DbClient\"),\n  Repetition: Symbol('Repetition'),\n  Dictionary: Symbol('Dictionary'),\n  User: Symbol('User'),\n  Friend: Symbol('Friend'),\n  Auth: Symbol('Auth')\n};\n\nexport { TYPES };","module.exports = require(\"inversify\");","module.exports = require(\"jsonwebtoken\");","\nimport { Schema, model, Types } from 'mongoose'\nimport bcrypt from 'bcryptjs'\nimport jwt, { JwtPayload } from 'jsonwebtoken'\n// import { jwtSecret } from './../../config/default.json'\n\nexport const userSchema = new Schema<UserSchema, {}, IUserMethods>({\n  username: { type: String, lowercase: true, unique: true, required: [true, \"can't be blank\"], match: [/^[a-zA-Z0-9]+$/, 'is invalid'], index: true },\n  email: { type: String, lowercase: true, unique: true, required: [true, \"can't be blank\"], match: [/\\S+@\\S+\\.\\S+/, 'is invalid'], index: true },\n  isProAccount: { type: Boolean, default: false },\n  password: String,\n  profilePicture: String,\n  avatar: String,\n  biography: String,\n  gender: { type: String, enum: [\"male\", \"female\"] },\n  birthday: Number,\n  hobbies: String,\n  activityDate: Date,\n  language: {\n    type: String,\n    required: true\n  },\n  translatedLanguage: {\n    type: String,\n    required: true\n  },\n  transactions: [{\n    date: Number,\n    price: Number,\n    currency: String,\n    exp: Number,\n  }],\n  friends: [{ type: Schema.Types.ObjectId, ref: 'Friends'}]\n}, { timestamps: true })\n\nexport type UserSchema = {\n  _id?: Types.ObjectId;\n  username: string;\n  email: string;\n  isProAccount?: boolean;\n  password?: string;\n  profilePicture?: string;\n  avatar: string;\n  biography?: string;\n  gender?: 'male' | 'female';\n  birthday?: number;\n  hobbies?: string;\n  activityDate?: Date;\n  language: string;\n  translatedLanguage: string;\n  transactions?: {\n    date: number;\n    price: number;\n    currency: string;\n    exp: number;\n  }[],\n  friends: string[]\n}\n\ninterface IUser {\n  username: string;\n  email: string;\n  isProAccount: boolean;\n  token: string;\n  refreshToken: string;\n}\n\ninterface IUserMethods {\n  setPassword(password: string): Promise<void>;\n  validPassword(password: string): Promise<boolean>;\n  generateJWT(): string;\n  generateJWRT(token: string): string;\n  toAuthJSON(tokenOuter?: string): IUser\n}\n//mongo88\nuserSchema.methods.setPassword = async function (password: string) {\n  const hashedPassword = await bcrypt.hash(password, 12)\n  this.password = hashedPassword\n}\n\nuserSchema.methods.validPassword = async function (password: string): Promise<boolean> {\n  const isMatch = await bcrypt.compare(password, this.password)\n  return isMatch\n}\n\nuserSchema.methods.generateJWT = function () {\n  const token = jwt.sign(\n    {\n      idUser: this._id,\n    },\n    process.env.jwtSecret || '',\n    {\n      expiresIn: '1d',\n      jwtid: '1'\n    }\n  )\n\n  return token\n}\n\nuserSchema.methods.generateJWRT = function refresh(token: string) {\n  // const token = this.toAuthJSON().token\n  const payload = jwt.decode(token) as JwtPayload;\n\n\n  delete payload.exp;\n  delete payload.iat;\n  delete payload.jti\n  return jwt.sign(payload, process.env.jwtSecret || '', { expiresIn: '2d', jwtid: '2' });\n\n  // delete payload.nbf;\n  // delete payload.jti; //We are generating a new token, if you are using jwtid during signing, pass it in refreshOptions\n  // const localJwtSignOptions = Object.assign({}, { jwtid: refreshOptions.jwtid }, {expiresIn: '1h'});\n  // The first signing converted all needed options into claims, they are already in the payload\n}\n\nuserSchema.methods.toAuthJSON = function (oldToken?: string) {\n  const { username, email, isProAccount, _id, avatar, profilePicture, language, translatedLanguage } = this\n  const token = oldToken || this.generateJWT();\n  return {\n    username,\n    email,\n    isProAccount,\n    token,\n    avatar,\n    profilePicture,\n    refreshToken: this.generateJWRT(token),\n    idUser: _id,\n    language,\n    translatedLanguage\n  }\n}\n\nexport const User = model('User', userSchema)\n","import mongoose, { Model } from \"mongoose\";\nimport { UserSchema } from \"../models/User\";\n\n\nexport function parseDictionaryCollection(dictionary: any) {\n\n\n  const res = Object.values(dictionary).map(parseDocument)\n\n  // const resToObj = res.reduce(arrayToObject, {})\n  // \n  // await writeFile(`${PATH_DATA}repetitions.json`, JSON.stringify(resToObj, null, 2));\n  return res.reduce((acc, val) => ({ ...acc, [val.word]: val }), {});\n}\n\nexport function parseDocument(model: any) {\n\n  try {\n    return {...model.get('value'), _id: model.get('_id')}\n  } catch (e) {\n    console.log(e)\n  }\n}\n\nexport async function deleteDocument(Model: Model<{}>, id: string, response: any, user: string) {\n  try {\n\n    const doc = await Model.findOneAndRemove({ _id: id, user })\n    return response.send(parseDocument(doc));\n  } catch (err) {\n    return console.log(err);\n  } \n}\n\nexport const responseAllCollection = async (Model: Model<{}>, response: any, request: any, repetition = false) => {\n  const { idUser } = request._user;\n  const {language, translatedLanguage} = request.query\n \n  try {\n    let collection\n    if (repetition) {\n      collection = await Model.find({ user: idUser, 'value.language': [language, translatedLanguage], 'value.translatedTo': [language, translatedLanguage] })\n        // .find({'value.language': translatedLanguage, 'value.translatedTo': language })\n    } else {\n      collection = await Model.find({ user: idUser, 'value.language': language, 'value.translatedTo': translatedLanguage })\n\n    }\n    \n    return response.send(parseDictionaryCollection(collection))\n  } catch (err) {\n    return console.log(err);\n  }\n\n}\n\nexport async function patchDocument(Model: Model<{}>, id: string, oldValue: any, request: any, response: any) {\n  const { idUser } = request._user;\n\n  try {\n    const res = await Model.findOneAndUpdate({ _id: id, user: idUser }, { value: { ...oldValue, ...request.body } }, { new: true });\n   return  response.send(parseDocument(res));\n  } catch(err) {\n    return console.log(err);\n  }\n\n}\n\nexport async function getDataDocument<T>(request: any, Model: Model<T>) {\n  const { id } = request.params;\n  const { idUser } = request._user;\n\n  const oldWord = await Model.findOne({ _id: id, user: idUser })\n  const oldValue = oldWord?.toObject().value || {}\n\n  return { id, oldValue }\n}\n\nexport async function setDocument(Model: Model<{}>, request: any, response: any) {\n  const { idUser } = request._user;\n\n  const documentAlreadyExist = await Model.findOne({ key: request.body.word, user: idUser })\n\n  if (documentAlreadyExist) {\n    return response.status(404).send()\n  }\n\n  const document = new Model({ key: request.body.word, value: request.body, user: new mongoose.Types.ObjectId(idUser) });\n\n \n  try {\n    await document.save()\n    return response.send(parseDocument(document));\n  } catch (error) {\n    return console.log(error);\n  }\n  \n}\n\nexport async function updateUser(request: any, Model: Model<UserSchema>, updatedField: {[key: string]: string}) {\n\n  const { idUser } = request._user;\n  const userModel = await Model.findOne({ _id: idUser })\n \n  \n  return await Model.findOneAndUpdate({ _id: idUser }, { ...userModel?.toObject(), ...updatedField}, { new: true })\n} ","module.exports = require(\"reflect-metadata\");","import cors from \"cors\";\nimport mongoose from \"mongoose\";\nimport { TYPES } from \"./types\";\n\nexport type Cors = (\n  req: cors.CorsRequest,\n  res: {\n    statusCode?: number | undefined;\n    setHeader(key: string, value: string): any;\n    end(): any;\n  },\n  next: (err?: any) => any\n) => void\n\nexport interface DB<T, O = any, C = any> {\n  connect: (uri: string, options?: O, callback?: C) => Promise<T>\n}\n\nexport interface IServer {\n  connectToDB: () => Promise<void>;\n  listen: () => void;\n  useRouter: () => void;\n}\n\nexport interface IFileController {\n  uploadPhoto: (req: any, res: any, next: any) => void\n  getPhoto: (req: any, res: any, next: any) => void\n  deletePhoto: (req: any, res: any, next: any) => void\n}\n\nexport type DbClient = mongoose.Connection;\n\nexport { TYPES }","import { Container, ContainerModule, interfaces } from \"inversify\";\nimport mongoose, { Types } from \"mongoose\";\n// import { Server } from \"../../server\";\nimport { FileController } from \"../controllers/fileController\";\nimport { GridFS } from \"../modules/gridFS\";\n// import { FS } from \"../controllers/intefaces\";\nimport { Cors, DB, DbClient, IFileController, IServer, TYPES } from \"../interfaces\";\nimport { TYPE } from \"inversify-express-utils\";\nimport { Auth, AuthController, authController } from \"../controllers/authController\";\nimport { UserController } from \"../controllers/userController\";\nimport { RepetitionController } from \"../controllers/repetitionController\";\nimport { DictionariesController } from \"../controllers/dictionariesController\";\nimport { FS } from \"../interfaces/modules\";\nimport { FriendsController } from \"../controllers/friendsController\";\n\nconst myContainer = new Container();\n\nexport const mainModule = new ContainerModule(\n  (\n    bind: interfaces.Bind,\n    _unbind: interfaces.Unbind,\n    _isBound: interfaces.IsBound,\n    _rebind: interfaces.Rebind,\n    _unbindAsync: interfaces.UnbindAsync,\n    _onActivation: interfaces.Container[\"onActivation\"],\n    _onDeactivation: interfaces.Container[\"onDeactivation\"]\n  ) => {\n\n    // registerController(bind, AuthController)\n\n    bind<Auth>(TYPES.Auth).to(AuthController).inSingletonScope()\n    bind<UserController>(TYPES.User).to(UserController).inSingletonScope()\n    bind<FriendsController>(TYPES.Friend).to(FriendsController).inSingletonScope()\n    bind<DictionariesController>(TYPES.Dictionary).to(DictionariesController).inSingletonScope()\n    bind<RepetitionController>(TYPES.Repetition).to(RepetitionController).inSingletonScope()\n\n    bind<DbClient>(TYPES.DbClient).toConstantValue(mongoose.connection)\n    bind<FS>(TYPES.Fs).to(GridFS).inSingletonScope()\n    bind<IFileController>(TYPES.FileController).to(FileController).inSingletonScope()\n\n  }\n);\n\n\nfunction registerController<T>(\n  bind: interfaces.Bind,\n  constructor: interfaces.Newable<T>\n) {\n  bind<T>(TYPE.Controller)\n    .to(constructor)\n    .whenTargetNamed(constructor.name);\n}\n\nexport { myContainer }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import { Container, Inject, Service } from 'typedi';\n// DI with typedi\n// const container = Container.of();\n\n// const fs = new GridFS(mongoose.connection);\n// // const fileController = new FileController();\n\n// container.set(\"fs\", fs);\n// // container.set(\"fileSystem\", fileSystem);\n\n// const fileController = container.get(FileController);","\nimport { Schema, model } from 'mongoose'\n\nexport const friendsSchema = new Schema({\n  requester: { type: Schema.Types.ObjectId, ref: 'User' },\n  recipient: { type: Schema.Types.ObjectId, ref: 'User' },\n  status: {\n    type: Number,\n    enums: [\n      0,    //'add friend',\n      1,    //'requested',\n      2,    //'pending',\n      3,    //'friends'\n    ]\n  }\n}, { timestamps: true })\n\nexport const Friend = model('Friends', friendsSchema)\n","import \"reflect-metadata\";\nimport express, { Express } from \"express\";\n\nimport ip from \"ip\";\nimport mongoose, { Model } from 'mongoose'\nimport { Server } from \"./modules/Server\";\nimport { myContainer } from \"./containerDI\";\nconsole.log('local ip my computer: ', ip.address());\n \n\nasync function start() {\n\n  const server = new Server<typeof mongoose>(express, mongoose, myContainer)\n  console.log('used dependency injection')\n\n  server.listen()\n  await server.connectToDB()\n  // server.useRouter()\n}\n\n(async () => {\n\n  await start();\n})();\n\n","module.exports = require(\"express\");","module.exports = require(\"ip\");","import express, { Express, Router } from \"express\";\n// import { router } from \"../routes\";\nimport { ErrorHandleMiddleware } from \"../middleware/errorHandlingMiddleware\";\n// import { mongoURI, port } from './../../config/default.json'\nimport { Cors, DB, IFileController, IServer, TYPES } from \"../interfaces\";\nimport { Container } from \"inversify\";\nimport { InversifyExpressServer } from \"inversify-express-utils\";\nimport { mainModule } from \"../containerDI\";\nimport cors, { CorsRequest } from 'cors'\n\nexport class Server<T, O = any, C = any> implements IServer {\n  private app!: InversifyExpressServer\n  constructor(\n    private framework: typeof express,\n    private dataBase: DB<T, O, C>,\n    private containerDI: Container\n  ) {\n    console.log(1)\n    this.app = new InversifyExpressServer(containerDI)\n    containerDI.load(mainModule)\n    console.log(2)\n    this.app.setConfig((app) => {\n      app.use(cors())\n      app.use(this.framework.json())\n      app.use(this.framework.urlencoded({ extended: false }))\n    })\n    console.log(3)\n    this.app.setErrorConfig((app) => {\n      app.use(ErrorHandleMiddleware)\n    })\n    console.log(4)\n  }\n\n  async connectToDB() {\n    try {\n      console.log(7)\n      await this.dataBase.connect(process.env.mongoURI || '')\n      console.log(8)\n    } catch (e) {\n      if (e instanceof Error) {\n        console.log('Server error', e.message)\n      }\n      process.exit(1)\n    }\n  }\n\n  useRouter() {\n    // this.app.use('/api', this.router)\n  }\n\n  listen() {\n    console.log(5)\n    const app = this.app.build()\n    // this.app.build.\n    console.log(6)\n    app.listen(process.env.PORT || '3000');\n    console.log(`Application listening on port ${process.env.PORT}...`);\n\n    this.containerDI.bind<express.Application>(TYPES.App).toConstantValue(app);\n  }\n}\n","import { ApiError } from './../error/ApiError'\n\nexport function ErrorHandleMiddleware (err: any, _req: any, res: any, _next: any) {\n   \n    \n    if (err instanceof ApiError) {\n      \n        return res.status(err.status).json({message: err.message})\n    }\n    \n    return res.status(500).json({message: \"Error!\"})\n}","import ip from \"ip\";\n// import { Fs, GridFS } from \"./gridFS\";\nimport { ApiError } from \"../error/ApiError\";\nimport { FileSchema, FS } from \"./intefaces\";\n// import { gridFs } from \"./gridFS\";\nimport { NextFunction } from \"express\";\nimport 'reflect-metadata';\nimport { injectable, inject } from \"inversify\";\nimport { TYPES } from \"./../interfaces/types\";\nimport { IFileController } from \"../interfaces\";\nimport { BaseHttpController, controller, httpDelete, httpGet, httpPost } from \"inversify-express-utils\";\nimport { authMiddleWare } from \"../middleware/authMiddleware\";\nimport { upload } from \"../middleware/file\";\n\n// @injectable()\n@controller('/api/file')\nexport class FileController implements IFileController {\n  constructor(@inject(TYPES.Fs) private fs: FS<FileSchema>) { }\n\n  @httpPost('/upload', authMiddleWare, upload.single('file'))\n  async uploadPhoto(req: any, res: any) {\n    // res.\n\n    if (req.file === undefined) return res.send(\"you must select a file.\");\n\n    const imgUrl = `https://build-wheat-rho.vercel.app/api/file/${req.file.filename}`\n\n    // `${this.URL}/avatar/${req.file.filename}`;\n    return res.send(imgUrl);\n  }\n\n\n  @httpGet('/:filename')\n  async getPhoto(req: any, res: any, next: NextFunction) {\n\n    try {\n\n      const file: any = await this.fs.findOne(req.params.filename);\n      if (file) {\n        res.setHeader('content-type', 'application/octet-stream');\n        const buffer = await this.fs.getFileBuffer(file.filename)\n        return res.send(buffer)\n      }\n      return next(ApiError.badRequest('photo not a found'))\n    } catch (error) {\n\n      return res.send('not found');\n    }\n  }\n\n  @httpDelete('/:filename', authMiddleWare)\n  async deletePhoto(req: any, res: any, next: NextFunction) {\n    try {\n\n      const result = await this.fs.findOne(req.params.filename);\n      if (result?._id) {\n        const remove = this.fs.delete(result._id)\n        return res.send(\"success\");\n      }\n      return next(ApiError.badRequest('photo not a found'))\n      // const removeFile = await this.gfs.files.findOneAndDelete({ filename: req.params.filename});\n      // const removeChunk = await this.gfs.collection('photos.chunks').findOneAndDelete({files_id: result?._id})\n\n    } catch (error) {\n      console.log(error);\n      res.send(\"An error occur.\");\n    }\n  }\n}\n\n// export const fileController = new FileController(gridFs)\n\n\n// export const fileController = container.registerSingleton<FileController>()\n","\nimport mongoose from 'mongoose';\nimport multer from 'multer'\nimport { GridFsStorage } from 'multer-gridfs-storage'\n// import { mongoURI, port } from './../../config/default.json'\nimport GridFsStream from \"gridfs-stream\";\n\n// const conn = mongoose.createConnection(mongoURI);\n// const conn = mongoose.connection;\n// //Init gfs \n// let gfs; \n// conn.once('open', ()=>{\n//     gfs = GridFsStream(conn.db, mongoose.mongo);\n//     gfs.collection('photos');\n// })\n\n// export function initFileMiddleWare(db: typeof mongoose) {\n//     const storage = new GridFsStorage({\n//         url: `${mongoURI}/English`,\n//         options: { useNewUrlParser: true, useUnifiedTopology: true },\n//         file: (_req, file) => {\n//             const match = [\"image/png\", \"image/jpeg\"];\n//             \n//             if (match.indexOf(file.mimetype) === -1) {\n//                 const filename = `${Date.now()}-any-name-${file.originalname}`;\n//                 return filename;\n//             }\n\n//             return {\n//                 bucketName: \"photos\",\n//                 filename: `${Date.now()}-any-name-${file.originalname}`,\n//             };\n//         },\n//     });\n// }\n\nconst storage = new GridFsStorage({\n  url: process.env.mongoURI || '',\n  options: { useNewUrlParser: true, useUnifiedTopology: true },\n  file: (_req, file) => {\n    const match = [\"image/png\", \"image/jpeg\"];\n\n    // if (match.indexOf(file.mimetype) === -1) {\n    //     const filename = `${Date.now()}-any-name-${file.originalname}`;\n    //     return filename;\n    // }\n\n    return {\n      bucketName: \"photos\",\n      filename: `${Date.now()}-asset-${file.originalname}`,\n    };\n  },\n});\n\nexport const upload = multer({ storage });","module.exports = require(\"multer\");","module.exports = require(\"multer-gridfs-storage\");","import mongoose, { InferId } from 'mongoose';\nimport GridFsStream, { } from \"gridfs-stream\";\nimport {\n  FileSchema,\n  //  FS\n} from '../controllers/intefaces';\nimport { inject, injectable } from 'inversify';\nimport { TYPES } from '../interfaces';\nimport { FS } from './../interfaces/modules'\n\n// @injectable()\nexport class GridFS extends FS<FileSchema, mongoose.Connection>{\n  private fs!: GridFsStream.Grid\n  private fsBucket!: any\n  // private conn!: any\n\n  constructor(protected connection: mongoose.Connection) {\n    super(connection)\n    connection.once('open', () => {\n\n      this.fsBucket = new mongoose.mongo.GridFSBucket(connection.db, {\n        bucketName: 'photos'\n      })\n\n      this.fs = GridFsStream(connection.db, mongoose.mongo);\n      this.fs.collection('photos');\n    })\n  }\n\n  protected openDownloadStreamByName(filename: string) {\n    return this.fsBucket.openDownloadStreamByName(filename)\n  }\n\n  async findOne(filename: string) {\n    return await this.fs.files.findOne<FileSchema>({ filename })\n  }\n\n  protected delete(id: InferId<FileSchema>) {\n    return this.fsBucket.delete(id)\n  }\n\n  protected async getFileBuffer(filename: string) {\n    const stream = this.openDownloadStreamByName(filename);\n    stream.read();\n    \n    return new Promise<Buffer>((resolve, reject) => {\n      const chunks: any = []\n      stream.on('data', (data: any) => {\n        chunks.push(data);\n      });\n      stream.on('end', () => {\n        const data = Buffer.concat(chunks);\n        \n\n        resolve(data);\n      });\n      stream.on('error', (err: any) => {\n        reject(err);\n      });\n    });\n  }\n}\n\n// const c = new GridFS(new mongoose.Connection)\n\n// c\n// export const gridFs = new GridFS(mongoose.connection)\n","module.exports = require(\"gridfs-stream\");","import { inject, injectable } from \"inversify\";\nimport { TYPES } from \"../types\";\n\n@injectable()\nexport abstract class FS<T1 = any, T2 = any, T3 = any> {\n  // @inject(TYPES.DbClient) protected abstract conn: T2\n  constructor(@inject(TYPES.DbClient) protected connection: T2) { }\n\n  protected abstract getFileBuffer(filename: string): Promise<Buffer>;\n  protected abstract findOne(filename: string): Promise<T1 | null>;\n  protected abstract openDownloadStreamByName(filename: string): T3;\n  protected abstract delete(id: T3): T3;\n}","import { ApiError } from \"../error/ApiError\";\nimport { Dictionary, TranslatedDictionary } from \"../models/Dictionary\";\nimport { Repetition } from \"../models/Repetitions\";\nimport { User } from \"../models/User\";\nimport { deleteDocument, getDataDocument, patchDocument, responseAllCollection, setDocument } from \"../utils/base\";\nimport jwt, { JwtPayload } from 'jsonwebtoken'\n// import { jwtSecret } from './../../config/default.json'\nimport { controller, httpPost, httpGet } from \"inversify-express-utils\";\nimport { inject, injectable } from \"inversify\";\n\nexport interface Auth {\n  login(...any: any): Promise<any>\n  registration(...any: any): Promise<any>\n  refresh(...any: any): Promise<any>\n  getUser(...any: any): Promise<any>\n}\n\n\n@controller(\"/api/auth\")\nexport class AuthController implements Auth {\n\n  // @inject() public _actorRepository: ActorRepository;\n\n  @httpPost('/login')\n  async login(req: any, res: any, next: any) {\n    const { password, username } = req.body\n    const user = await User.findOne({ username })\n\n    if (!user) {\n      return next(ApiError.internal('User not a found'))\n    }\n    let comparePassword = await user.validPassword(password);\n    if (!comparePassword) {\n      return next(ApiError.internal('Write correct password'))\n    }\n    const json = user.toAuthJSON()\n\n    return res.json(json)\n  }\n  @httpPost('/registration')\n  async registration(req: any, res: any, next: any) {\n    const { email, password, username } = req.body\n    // if (!email || !password) {\n    //   return next(ApiError.badRequest('Некорректный email или password'))\n    // }\n    const candidate = await User.findOne({ email })\n    if (candidate) {\n      return next(ApiError.badRequest('The User now exist'))\n    }\n\n    const user = new User({\n      username,\n      email,\n      language: 'en',\n      translatedLanguage: 'ua'\n    })\n\n    await user.setPassword(password)\n    await user.save()\n    const json = user.toAuthJSON()\n\n    return res.json(json)\n  }\n\n  @httpGet('/getUser/:refreshToken')\n  async refresh(req: any, res: any, next: any) {\n    try {\n      const { refreshToken } = req.params\n      const decoded = jwt.verify(refreshToken, process.env.jwtSecret || '') as JwtPayload\n\n      const user = await User.findOne({ _id: decoded?.idUser })\n      if (!user) {\n        return next(ApiError.internal('User not a found'))\n      }\n\n      const json = user.toAuthJSON(refreshToken)\n\n      return res.json(json)\n    } catch {\n      return next(ApiError.notAuth('Refresh token expired'))\n    }\n  }\n\n  @httpGet('/refresh/:token')\n  async getUser(req: any, res: any, next: any) {\n\n    try {\n      const { token } = req.params\n      const decoded = jwt.verify(token, process.env.jwtSecret || '')\n\n\n      if (typeof decoded !== 'string') {\n        const user = await User.findOne({ _id: decoded?.idUser })\n        if (!user) {\n          return next(ApiError.internal('User not a found'))\n        }\n\n        const json = user.toAuthJSON(token)\n\n        return res.json(json)\n      }\n      return next(ApiError.internal('Can\\'t decode token'))\n    } catch (e) {\n      return next(ApiError.notAuth('Token expired'))\n    }\n  }\n}\n\nexport const authController = new AuthController()\n","module.exports = require(\"bcryptjs\");","\nimport { User } from \"../models/User\";\nimport { updateUser } from \"../utils/base\";\n\n\nimport { controller, httpPatch, httpGet } from \"inversify-express-utils\";\nimport { authMiddleWare } from \"../middleware/authMiddleware\";\nimport { Friend } from \"../models/Friend\";\nimport mongoose from \"mongoose\";\n\n@controller(\"/api/user\", authMiddleWare)\nexport class UserController {\n\n\n  @httpGet('/users')\n  async getUsers(request: any, response: any) {\n\n    const { idUser } = request._user;\n\n    const usersModel = await User.find()\n\n    \n\n    return response.send(usersModel)\n    // await User.findOneAndUpdate({_id: idUser}, {...userModel?.toObject(), activityDate}, {new: true})\n    // return response.status(204).send()\n  }\n\n\n  @httpGet('/friends')\n  async friends(request: any, response: any) {\n    const { idUser } = request._user;\n    // const { candidateFriendId } = request.query;\n\n    \n\n    // const res = await User.aggregate([\n    //   {\n    //     \"$lookup\":{\n    //       from: Friend.collection.name,\n    //       localField:  'recipient',\n    //       foreignField: 'status',\n    //       as: 'kek'\n    //     }\n    //   },\n    //   {\n    //     \"$addFields\": {\n    //       \"friendsStatus\": {\n    //         \"$ifNull\": [{ \"$min\": \"$friends.status\" }, 0]\n    //       }\n    //     }\n    //   }\n    // ])\n\n    const res = await User.aggregate([\n      {\n        \"$lookup\": {\n          \"from\": Friend.collection.name,\n          localField: \"friends\",\n          foreignField: \"_id\",\n          \"let\": { \"friends\": \"$friends\" },\n          \"as\": \"match\",\n          \"pipeline\": [\n            {\n              \"$match\": {\n                \"recipient\": new mongoose.Types.ObjectId(idUser),\n                \"$expr\": { \"$in\": [\"$_id\", \"$$friends\"] }\n              }\n            },\n            // { \"$project\": { \"status\": 1 } }\n          ],\n        }\n      },\n      // {\n      //   \"$addFields\": {\n      //     \"friendsStatus\": {\n      //       \"$ifNull\": [{ \"$min\": \"$friends.status\" }, 0]\n      //     }\n      //   }\n      // }\n    ])\n    const friends = res.filter(friend => friend.match.length)\n    \n\n    return response.send(friends)\n  }\n\n  @httpGet('/friendsCandidates')\n  async friendsCandidates(request: any, response: any) {\n    const { idUser } = request._user;\n \n\n    const res = await User.aggregate([\n      {\n        \"$lookup\": {\n          \"from\": Friend.collection.name,\n          localField: \"friends\",\n          foreignField: \"_id\",\n          \"let\": { \"friends\": \"$friends\" },\n          \"as\": \"match\",\n          \"pipeline\": [\n            {\n              \"$match\": {\n                \"recipient\": new mongoose.Types.ObjectId(idUser),\n                \"$expr\": { \"$in\": [\"$_id\", \"$$friends\"] }\n              }\n            },\n            { \"$project\": { \"status\": 1 } }\n          ],\n        }\n      },\n \n    ])\n    const friends = res.filter(friend => !friend.match.length && friend._id.toString() !== idUser)\n    \n\n    return response.send(friends)\n  }\n \n  @httpPatch('/patchActivityDate')\n  async patchActivityDate(request: any, response: any) {\n\n    const { idUser } = request._user;\n\n    const userModel = await User.findOne({ _id: idUser })\n    const activityDate = new Date()\n\n    await User.findOneAndUpdate({ _id: idUser }, { ...userModel?.toObject(), activityDate }, { new: true })\n    return response.status(204).send()\n  }\n\n  @httpPatch('/patchAvatar')\n  async patchAvatar(request: any, response: any) {\n    const { avatar } = request.body\n\n    const updatedField = {\n      avatar\n    }\n\n    await updateUser(request, User, updatedField)\n\n    return response.status(204).send()\n  }\n\n  @httpPatch('/patchProfilePicture')\n  async patchProfilePicture(request: any, response: any) {\n    const { profilePicture } = request.body\n\n    const updatedField = {\n      profilePicture\n    }\n\n    await updateUser(request, User, updatedField)\n\n    return response.status(204).send()\n  }\n\n  @httpPatch('/patchTranslatedLanguage')\n  async patchLanguage(request: any, response: any) {\n    const { translatedLanguage } = request.body\n\n    const updatedField = {\n      translatedLanguage\n    }\n\n    const data = await updateUser(request, User, updatedField)\n    \n    return response.status(204).send(data?.toObject().language)\n  }\n\n  @httpPatch('/patchLanguage')\n  async patchTranslatedLanguage(request: any, response: any) {\n    const { language } = request.body\n\n    const updatedField = {\n      language\n    }\n\n    const data = await updateUser(request, User, updatedField)\n    \n    return response.status(204).send(data?.toObject().translatedLanguage)\n  }\n}\n\n\n// async function toBuffer (avatar: string)  {\n\n//  } \n\n\nexport const userController = new UserController()\n","import { controller, httpGet, httpPatch, httpPost } from \"inversify-express-utils\";\nimport { authMiddleWare } from \"../middleware/authMiddleware\";\nimport { Dictionary, TranslatedDictionary } from \"../models/Dictionary\";\nimport { Repetition } from \"../models/Repetitions\";\nimport { deleteDocument, getDataDocument, patchDocument, responseAllCollection, setDocument } from \"../utils/base\";\n\n@controller('/api/repetitions', authMiddleWare) \nexport class RepetitionController {\n\n  @httpGet('/repetitions')\n  async getRepetitions(request: any, response: any) {\n \n    return await responseAllCollection(Repetition, response, request, true)\n  }\n\n  @httpPatch('/patchRepetition/:id')\n  async patchRepetition(request: any, response: any) {\n    const {id, oldValue} = await getDataDocument(request, Repetition)\n\n   return await patchDocument(Repetition, id, oldValue, request, response)\n  }\n   \n  @httpPost('/setRepetition')\n  async setRepetition(request: any, response: any) {\n    \n    return await setDocument(Repetition, request, response)\n  }\n  \n}\n\nexport const repetitionController = new RepetitionController()\n","\nimport { Schema, model } from 'mongoose'\n\nexport const repetitionSchema = new Schema({\n  key: String,\n  user: {\n    type: Schema.Types.ObjectId,\n    ref: 'User'\n  },\n  value: {\n    language: { type: String, required: true },\n    translatedTo: { type: String, required: true },\n    word: { type: String, required: true },\n    themes: {\n      type: Object,\n      required: false\n    },\n    otherTranslates: {\n      type: Object,\n      required: false\n    },\n    translate: { type: String, required: true },\n    synonyms: { type: Object, required: true },\n    partsOfSpeech: {\n      type: Object,\n      required: true\n    },\n    progress: {\n      type: [Object],\n      required: true\n    },\n    repeatDay: {\n      type: Number,\n      required: true\n    },\n    countRepeatAtStart: {\n      type: Number,\n      required: true\n    },\n    repeatAtStart: {\n      type: Boolean,\n      required: true\n    },\n    allMistakes: {\n      type: Number,\n      required: true\n    }\n  }\n},{ timestamps: true })\n\n\nexport const Repetition = model('Repetition', repetitionSchema)\n","import { controller, httpDelete, httpGet, httpPatch, httpPost } from \"inversify-express-utils\";\nimport { authMiddleWare } from \"../middleware/authMiddleware\";\nimport { Dictionary, StaticDictionary, StaticTranslatedDictionary, TranslatedDictionary } from \"../models/Dictionary\";\nimport { deleteDocument, getDataDocument, patchDocument, responseAllCollection, setDocument } from \"../utils/base\";\n\n@controller('/api/dictionaries', authMiddleWare)\nexport class DictionariesController {\n\n  @httpDelete('/dictionary/:id')\n  async deleteWord(request: any, response: any) {\n    const { id } = request.params;\n    const { idUser } = request._user;\n    \n    return deleteDocument(Dictionary, id, response, idUser)\n  }\n\n  @httpDelete('/translatedDictionary/:id')\n  async deleteTranslatedWord(request: any, response: any) {\n    const { id } = request.params;\n    const { idUser } = request._user;\n\n   return  deleteDocument(TranslatedDictionary, id, response, idUser)\n  }\n  \n  @httpGet('/dictionary')\n  async getDictionary(request: any, response: any) {\n \n    await responseAllCollection(Dictionary, response, request)\n  }\n\n  @httpGet('/staticDictionary')\n  async getStaticDictionary(request: any, response: any) {\n \n    return await responseAllCollection(StaticDictionary, response, request)\n  }\n\n  @httpGet('/staticTranslatedDictionary')\n  async getStaticTranslatedDictionary(request: any, response: any) {\n \n    return await responseAllCollection(StaticTranslatedDictionary, response, request)\n  }\n\n  @httpGet('/translatedDictionary')\n  async getTranslatedDictionary(request: any, response: any) {\n \n    return  await responseAllCollection(TranslatedDictionary, response, request)\n  }\n\n  @httpPatch('/patchDictionary/:id')\n  async patchDictionary(request: any, response: any) {\n    const { id, oldValue } = await getDataDocument(request, Dictionary)\n\n    return await patchDocument(Dictionary, id, oldValue, request, response)\n  }\n\n\n  @httpPatch('/patchStaticDictionary/:id')\n  async patchStaticDictionary(request: any, response: any) {\n    const { id, oldValue } = await getDataDocument(request, StaticDictionary)\n\n    return await patchDocument(StaticDictionary, id, oldValue, request, response)\n  }\n\n\n  @httpPatch('/patchTranslatedDictionary/:id')\n  async patchTranslatedDictionary(request: any, response: any) {\n    const { id, oldValue } = await getDataDocument(request, TranslatedDictionary)\n\n    return await patchDocument(TranslatedDictionary, id, oldValue, request, response)\n  }\n\n\n  @httpPatch('/patchStaticTranslatedDictionary/:id')\n  async patchStaticTranslatedDictionary(request: any, response: any) {\n    const { id, oldValue } = await getDataDocument(request, StaticTranslatedDictionary)\n\n    return await patchDocument(StaticTranslatedDictionary, id, oldValue, request, response)\n  }\n\n  @httpPost('/setDictionary')\n  async setDictionary(request: any, response: any) {\n   return  await setDocument(Dictionary, request, response)\n  }\n\n\n  @httpPost('/setTranslatedDictionary')\n  async setTranslatedDictionary(request: any, response: any) {\n    return await setDocument(TranslatedDictionary, request, response)\n  }\n\n\n  @httpPost('/setStaticDictionary')\n  async setStaticDictionary(request: any, response: any) {\n    return await setDocument(StaticDictionary, request, response)\n  }\n\n  @httpPost('/setStaticTranslatedDictionary')\n  async setStaticTranslatedDictionary(request: any, response: any) {\n    return await setDocument(StaticTranslatedDictionary, request, response)\n  }\n}\n\nexport const dictionariesController = new DictionariesController()\n","\nimport { Schema, model } from 'mongoose'\n\nexport const dictionarySchema = new Schema({\n  key: String,\n  user: {\n    type: Schema.Types.ObjectId,\n    ref: 'User'\n  },\n  value: {\n    language: { type: String, required: true },\n    translatedTo: { type: String, required: true },\n    word: { type: String, required: true },\n    themes: {\n      type: Object,\n      required: false\n    },\n    otherTranslates: {\n      type: Object,\n      required: false\n    },\n    translate: { type: String, required: true },\n    synonyms: { type: Object, required: true },\n    partsOfSpeech: {\n      type: Object,\n      required: true\n    }\n  }\n},{ timestamps: true })\n\nexport const Dictionary = model('Dictionary', dictionarySchema)\nexport const StaticDictionary = model('StaticDictionary', dictionarySchema)\nexport const TranslatedDictionary = model('TranslatedDictionary', dictionarySchema)\nexport const StaticTranslatedDictionary = model('StaticTranslatedDictionary', dictionarySchema)\n","\nimport { User } from \"../models/User\";\nimport { updateUser } from \"../utils/base\";\n\n\nimport { controller, httpPatch, httpGet } from \"inversify-express-utils\";\nimport { authMiddleWare } from \"../middleware/authMiddleware\";\nimport { Friend } from \"../models/Friend\";\n\n@controller(\"/api/friends\", authMiddleWare)\nexport class FriendsController {\n\n  @httpGet('/requestBeFriend')\n  async requestBeFriend(request: any, response: any) {\n\n    const { idUser } = request._user;\n    const { candidateFriendId } = request.query;\n    \n    const docA = await Friend.findOneAndUpdate(\n      { requester: idUser, recipient: candidateFriendId },\n      { $set: { status: 1 } },\n      { upsert: true, new: true }\n    )\n    const docB = await Friend.findOneAndUpdate(\n      { recipient: idUser, requester: candidateFriendId },\n      { $set: { status: 2 } },\n      { upsert: true, new: true }\n    )\n    const updateUserA = await User.findOneAndUpdate(\n      { _id: idUser },\n      { $push: { friends: docA._id } }\n    )\n    const updateUserB = await User.findOneAndUpdate(\n      { _id: candidateFriendId },\n      { $push: { friends: docB._id } }\n    )\n    \n    return response.status(204).send()\n  }\n\n  @httpGet('/accept')\n  async accept(request: any, response: any) {\n    const { idUser } = request._user;\n    const { candidateFriendId } = request.query;\n\n    await Friend.findOneAndUpdate(\n      { requester: idUser, recipient: candidateFriendId },\n      { $set: { status: 3 } }\n    )\n    await Friend.findOneAndUpdate(\n      { recipient: idUser, requester: candidateFriendId },\n      { $set: { status: 3 } }\n    )\n\n    return response.status(204).send()\n  }\n\n  @httpGet('/reject')\n  async reject(request: any, response: any) {\n    const { idUser } = request._user;\n    const { candidateFriendId } = request.query;\n\n    const docA = await Friend.findOneAndRemove(\n      { requester: idUser, recipient: candidateFriendId }\n    )\n    const docB = await Friend.findOneAndRemove(\n      { recipient: idUser, requester: candidateFriendId }\n    )\n\n    if (docA?._id && docB?._id) {\n      \n      const updateUserA = await User.findOneAndUpdate(\n        { _id: idUser },\n        { $pull: { friends: docA._id } }\n      )\n      const updateUserB = await User.findOneAndUpdate(\n        { _id: candidateFriendId },\n        { $pull: { friends: docB._id } }\n      )\n\n      return response.status(204).send()\n    }\n\n    \n    return response.status(500).send()\n  }\n\n}\n\n\nexport const friendsController = new FriendsController()\n","module.exports = require(\"cors\");"],"sourceRoot":""}